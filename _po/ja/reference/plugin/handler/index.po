msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"PO-Revision-Date: 2014-03-05 12:52+0900\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

msgid ""
"---\n"
"title: API set for plugins on the handling phase\n"
"layout: en\n"
"---"
msgstr ""

msgid ""
"* TOC\n"
"{:toc}"
msgstr ""

msgid "## Abstract {#abstract}"
msgstr "## 概要 {#abstract}"

msgid ""
"Each Droonga Engine plugin can have its *handler*.\n"
"On the handling phase, handlers can process a request and return a result."
msgstr ""

msgid "### How to define a handler? {#howto-define}"
msgstr ""

msgid "For example, here is a sample plugin named \"foo\" with a handler:"
msgstr ""

msgid ""
"~~~ruby\n"
"require \"droonga/plugin\""
msgstr ""

msgid ""
"module Droonga::Plugins::FooPlugin\n"
"  extend Plugin\n"
"  register(\"foo\")"
msgstr ""

msgid ""
"  define_single_step do |step|\n"
"    step.name = \"foo\"\n"
"    step.handler = :Handler\n"
"    step.collector = Collectors::And\n"
"  end"
msgstr ""

msgid ""
"  class Handler < Droonga::Handler\n"
"    def handle(message)\n"
"      # operations to process a request\n"
"    end\n"
"  end\n"
"end\n"
"~~~"
msgstr ""

msgid "Steps to define a handler:"
msgstr ""

msgid ""
" 1. Define a module for your plugin (ex. `Droonga::Plugins::FooPlugin`) and re"
"gister it as a plugin. (required)\n"
" 2. Define a \"single step\" corresponding to the handler you are going to imple"
"ment. (required)\n"
" 2. Define a handler class (ex. `Droonga::Plugins::FooPlugin::Handler`) inheri"
"ting [`Droonga::Handler`](#classes-Droonga-Handler). (required)\n"
" 4. Define handling logic for requests as [`#handle`](#classes-Droonga-Handler"
"-handle). (optional)"
msgstr ""

msgid ""
"See also the [plugin development tutorial](../../../tutorial/plugin-developmen"
"t/handler/)."
msgstr ""

msgid "### How a handler works? {#how-works}"
msgstr ""

msgid "A handler works like following:"
msgstr ""

msgid ""
" 1. The Droonga Engine starts.\n"
"    * Your custom steps are registered.\n"
"      Your custom handler classes also.\n"
"    * Then the Droonga Engine starts to wait for request messages.\n"
" 2. A request message is transferred from the adaption phase.\n"
"    Then, the processing phase starts.\n"
"    * The Droonga Engine finds a step definition from the message type.\n"
"    * The Droonga Engine builds a \"single step\" based on the registered defini"
"tion.\n"
"    * A \"single step\" creates an instance of the registered handler class.\n"
"      Then the Droonga Engine enters to the handling phase.\n"
"      * The handler's [`#handle`](#classes-Droonga-Handler-handle) is called w"
"ith a task massage including the request.\n"
"        * The method can process the given incoming message as you like.\n"
"        * The method returns a result value, as the output.\n"
"      * After the handler finishes, the handling phase for the task message (a"
"nd the request) ends.\n"
"    * If no \"step\" is found for the type, nothing happens.\n"
"    * All \"step\"s finish their task, the processing phase for the request ends"
"."
msgstr ""

msgid ""
"As described above, the Droonga Engine creates an instance of the handler clas"
"s for each request."
msgstr ""

msgid ""
"Any error raised from the handler is handled by the Droonga Engine itself. See"
" also [error handling][]."
msgstr ""

msgid "## Configurations {#config}"
msgstr ""

msgid ""
"`action.synchronous` (boolean, optional, default=false)\n"
": (TBD)"
msgstr ""

msgid "## Classes and methods {#classes}"
msgstr ""

msgid "### `Droonga::Handler` {#classes-Droonga-Handler}"
msgstr ""

msgid ""
"This is the common base class of any handler. Your plugin's handler class must"
" inherit this."
msgstr ""

msgid "#### `#handle(message)` {#classes-Droonga-Handler-handle}"
msgstr ""

msgid ""
"This method receives a [`Droonga::HandlerMessage`](#classes-Droonga-HandlerMes"
"sage) wrapped task message."
msgstr ""

msgid "(TBD)"
msgstr ""

msgid "### `Droonga::HandlerMessage` {#classes-Droonga-HandlerMessage}"
msgstr ""

msgid "#### `#request` {#classes-Droonga-HandlerMessage-request}"
msgstr ""

msgid "Returns the request message."
msgstr ""

msgid "  [error handling]: ../error/"
msgstr ""
