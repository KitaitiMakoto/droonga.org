# Japanese translations for PACKAGE package.
# Copyright (C) 2013 THE PACKAGE'S COPYRIGHT HOLDER
# This file is distributed under the same license as the PACKAGE package.
# Kouhei Sutou <kou@clear-code.com>, 2013.
#
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2011-11-20 22:17+0900\n"
"PO-Revision-Date: 2013-12-19 14:53+0900\n"
"Last-Translator: Kouhei Sutou <kou@clear-code.com>\n"
"Language-Team: Japanese\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

msgid ""
"---\n"
"title: search\n"
"layout: documents\n"
"---"
msgstr ""

msgid ""
"* TOC\n"
"{:toc}"
msgstr ""

msgid "## Abstract {#abstract}"
msgstr ""

msgid ""
"The `search` command finds records from the specified table based on given con"
"ditions, and returns found records and/or related information."
msgstr ""

msgid ""
"This is designed as the most basic (low layer) command on Droonga, to search i"
"nformation from the database. When you want to add a new plugin including \"sea"
"rch\" feature, you should develop it as just a wrapper of this command, instead"
" of developing something based on more low level technologies."
msgstr ""

msgid ""
"This is a request-response style command. One response message is always retur"
"ned per one request."
msgstr ""

msgid "## Syntax {#syntax}"
msgstr ""

msgid ""
"    {\n"
"      \"timeout\" : <Seconds to be timed out>,\n"
"      \"queries\" : {\n"
"        \"<Name of the query 1>\" : {\n"
"          \"source\"    : \"<Name of a table or another query>\",\n"
"          \"condition\" : <Search conditions>,\n"
"          \"sortBy\"    : <Sort conditions>,\n"
"          \"groupBy\"   : <Group conditions>,\n"
"          \"output\"    : <Output conditions>\n"
"        },\n"
"        \"<Name of the query 2>\" : { ... },\n"
"        ...\n"
"      }\n"
"    }"
msgstr ""

msgid "## Usage {#usage}"
msgstr ""

msgid ""
"This section describes how to use the `search` command, via a typical usage wi"
"th following table:"
msgstr ""

msgid "Person table (with primary key):"
msgstr ""

msgid ""
"|_key|name|age|sex|job|note|\n"
"|Alice Arnold|Alice Arnold|20|female|announcer||\n"
"|Alice Cooper|Alice Cooper|30|male|musician||\n"
"|Alice Miller|Alice Miller|25|female|doctor||\n"
"|Bob Dole|Bob Dole|42|male|lawer||\n"
"|Bob Cousy|Bob Cousy|38|male|basketball player||\n"
"|Bob Wolcott|Bob Wolcott|36|male|baseball player||\n"
"|Bob Evans|Bob Evans|31|male|driver||\n"
"|Bob Ross|Bob Ross|54|male|painter||\n"
"|Lewis Carroll|Lewis Carroll|66|male|writer|the author of Alice's Adventures i"
"n Wonderland|"
msgstr ""

msgid "Note: `name` and `note` are indexed with `TokensBigram`."
msgstr ""

msgid "### Basic usage {#usage-basic}"
msgstr ""

msgid "This is the most simple example to output all records of the Person table:"
msgstr ""

msgid ""
"    search\n"
"    {\n"
"      \"queries\" : {\n"
"        \"people\" : {\n"
"          \"source\" : \"Person\",\n"
"          \"output\" : {\n"
"            \"elements\"   : [\"count\", \"records\"],\n"
"            \"attributes\" : [\"_key\", \"name\", \"age\", \"sex\", \"job\", \"note\"],\n"
"            \"limit\"      : -1\n"
"          }\n"
"        }\n"
"      }\n"
"    }"
msgstr ""

msgid ""
"    => search.result\n"
"       {\n"
"         \"people\" : {\n"
"           \"count\" : 9,\n"
"           \"records\" : [\n"
"             [\"Alice Arnold\", \"Alice Arnold\", 20, \"female\", \"announcer\", \"\"],\n"
"             [\"Alice Cooper\", \"Alice Cooper\", 30, \"male\", \"musician\", \"\"],\n"
"             [\"Alice Miller\", \"Alice Miller\", 25, \"male\", \"doctor\", \"\"],\n"
"             [\"Bob Dole\", \"Bob Dole\", 42, \"male\", \"lawer\", \"\"],\n"
"             [\"Bob Cousy\", \"Bob Cousy\", 38, \"male\", \"basketball player\", \"\"],\n"
"             [\"Bob Wolcott\", \"Bob Wolcott\", 36, \"male\", \"baseball player\", \"\"]"
",\n"
"             [\"Bob Evans\", \"Bob Evans\", 31, \"male\", \"driver\", \"\"],\n"
"             [\"Bob Ross\", \"Bob Ross\", 54, \"male\", \"painter\", \"\"],\n"
"             [\"Lewis Carroll\", \"Lewis Carroll\", 66, \"male\", \"writer\",\n"
"              \"the author of Alice's Adventures in Wonderland\"]\n"
"           ]\n"
"         }\n"
"       }"
msgstr ""

msgid ""
"The name `people` is a temporary name for the search query and its result.\n"
"A response of a `search` command will be returned as a hash, and the keys are "
"same to keys of the given `queries`.\n"
"So, this means: \"name the search result of the query as `people`\"."
msgstr ""

msgid "Why the command above returns all informations of the table? Because:"
msgstr ""

msgid ""
" * There is no search condition. This command matches to all records in the sp"
"ecified table, if no condition is specified.\n"
" * [`output`](#query-output)'s `elements` contains `records` (and `count`) col"
"umn(s). The parameter `elements` controls the returned information. Matched re"
"cords are returned as `records`, the total number of matched records are retur"
"ned as `count`.\n"
" * [`output`](#query-output)'s `limit` is `-1`. The parameter `limit` controls"
" the number of returned records, and `-1` means \"return all records\".\n"
" * [`output`](#query-output)'s `attributes` contails all columns of the Person"
" table. The parameter `attributes` controls which columns' value are returned."
msgstr ""

msgid "#### Search conditions {#usage-condition}"
msgstr ""

msgid ""
"Search conditions are specified via the `condition` parameter. There are two s"
"tyles of search conditions: \"scrypt syntax\" and \"query syntax\". See [`conditio"
"n` parameter](#query-condition) for more details."
msgstr ""

msgid "##### Search conditions in Script syntax {#usage-condition-script-syntax}"
msgstr ""

msgid ""
"Search conditions in script syntax are similar to ECMAScript. For example, fol"
"lowing query means \"find records that `name` contains `Alice` and `age` is lar"
"ger than `25`\":"
msgstr ""

msgid ""
"    search\n"
"    {\n"
"      \"queries\" : {\n"
"        \"people\" : {\n"
"          \"source\"    : \"Person\",\n"
"          \"condition\" : \"name @ 'Alice' && age >= 25\"\n"
"          \"output\"    : {\n"
"            \"elements\"   : [\"count\", \"records\"],\n"
"            \"attributes\" : [\"name\", \"age\"],\n"
"            \"limit\"      : -1\n"
"          }\n"
"        }\n"
"      }\n"
"    }"
msgstr ""

msgid ""
"    => search.result\n"
"       {\n"
"         \"people\" : {\n"
"           \"count\" : 2,\n"
"           \"records\" : [\n"
"             [\"Alice Arnold\", 20],\n"
"             [\"Alice Cooper\", 30],\n"
"             [\"Alice Miller\", 25]\n"
"           ]\n"
"         }\n"
"       }"
msgstr ""

msgid ""
"[Script syntax is compatible to Groonga's one](http://groonga.org/docs/referen"
"ce/grn_expr/script_syntax.html). See the linked document for more details."
msgstr ""

msgid "##### Search conditions in Query syntax {#usage-condition-query-syntax}"
msgstr ""

msgid ""
"The query syntax is mainly designed for search boxes in webpages. For example,"
" following query means \"find records that `name` or `note` contain the given w"
"ord, and the word is `Alice`\":"
msgstr ""

msgid ""
"    search\n"
"    {\n"
"      \"queries\" : {\n"
"        \"people\" : {\n"
"          \"source\"    : \"Person\",\n"
"          \"condition\" : {\n"
"            \"query\"   : \"Alice\",\n"
"            \"matchTo\" : [\"name\", \"note\"]\n"
"          },\n"
"          \"output\"    : {\n"
"            \"elements\"   : [\"count\", \"records\"],\n"
"            \"attributes\" : [\"name\", \"note\"],\n"
"            \"limit\"      : -1\n"
"          }\n"
"        }\n"
"      }\n"
"    }"
msgstr ""

msgid ""
"    => search.result\n"
"       {\n"
"         \"people\" : {\n"
"           \"count\" : 4,\n"
"           \"records\" : [\n"
"             [\"Alice Arnold\", \"\"],\n"
"             [\"Alice Cooper\", \"\"],\n"
"             [\"Alice Miller\", \"\"],\n"
"             [\"Lewis Carroll\",\n"
"              \"the author of Alice's Adventures in Wonderland\"]\n"
"           ]\n"
"         }\n"
"       }"
msgstr ""

msgid ""
"[Query syntax is compatible to Groonga's one](http://groonga.org/docs/referenc"
"e/grn_expr/query_syntax.html). See the linked document for more details."
msgstr ""

msgid "#### Sorting of search results {#usage-sort}"
msgstr ""

msgid ""
"Returned records can be sorted by conditions specified as the `sortBy` paramet"
"er. For example, following query means \"sort results by their `age`, in ascend"
"ing order\":"
msgstr ""

msgid ""
"    search\n"
"    {\n"
"      \"queries\" : {\n"
"        \"people\" : {\n"
"          \"source\"    : \"Person\",\n"
"          \"condition\" : \"name @ 'Alice'\"\n"
"          \"sortBy\"    : [\"age\"],\n"
"          \"output\"    : {\n"
"            \"elements\"   : [\"count\", \"records\"],\n"
"            \"attributes\" : [\"name\", \"age\"],\n"
"            \"limit\"      : -1\n"
"          }\n"
"        }\n"
"      }\n"
"    }"
msgstr ""

msgid ""
"    => search.result\n"
"       {\n"
"         \"people\" : {\n"
"           \"count\" : 8,\n"
"           \"records\" : [\n"
"             [\"Alice Arnold\", 20],\n"
"             [\"Alice Miller\", 25],\n"
"             [\"Alice Cooper\", 30]\n"
"           ]\n"
"         }\n"
"       }"
msgstr ""

msgid ""
"If you add `-` before name of columns, then search results are returned in des"
"cending order. For example:"
msgstr ""

msgid ""
"    search\n"
"    {\n"
"      \"queries\" : {\n"
"        \"people\" : {\n"
"          \"source\"    : \"Person\",\n"
"          \"condition\" : \"name @ 'Alice'\"\n"
"          \"sortBy\"    : [\"-age\"],\n"
"          \"output\"    : {\n"
"            \"elements\"   : [\"count\", \"records\"],\n"
"            \"attributes\" : [\"name\", \"age\"],\n"
"            \"limit\"      : -1\n"
"          }\n"
"        }\n"
"      }\n"
"    }"
msgstr ""

msgid ""
"    => search.result\n"
"       {\n"
"         \"people\" : {\n"
"           \"count\" : 8,\n"
"           \"records\" : [\n"
"             [\"Alice Cooper\", 30],\n"
"             [\"Alice Miller\", 25],\n"
"             [\"Alice Arnold\", 20]\n"
"           ]\n"
"         }\n"
"       }"
msgstr ""

msgid "See [`sortBy` parameter](#query-sortBy) for more details."
msgstr ""

msgid "#### Paging of search results {#usage-paging}"
msgstr ""

msgid ""
"Search results can be retuned partially via `offset` and `limit` under the [`o"
"utput`](#query-output) parameter. For example, following queries will return 2"
"0 or more search results by 10's."
msgstr ""

msgid ""
"    search\n"
"    {\n"
"      \"queries\" : {\n"
"        \"people\" : {\n"
"          \"source\" : \"Person\",\n"
"          \"output\" : {\n"
"            \"elements\"   : [\"count\", \"records\"],\n"
"            \"attributes\" : [\"name\"],\n"
"            \"offset\"     : 0,\n"
"            \"limit\"      : 10\n"
"          }\n"
"        }\n"
"      }\n"
"    }\n"
"    => returns 10 results from the 1st to the 10th."
msgstr ""

msgid ""
"    search\n"
"    {\n"
"      \"queries\" : {\n"
"        \"people\" : {\n"
"          \"source\" : \"Person\",\n"
"          \"output\" : {\n"
"            \"elements\"   : [\"count\", \"records\"],\n"
"            \"attributes\" : [\"name\"],\n"
"            \"offset\"     : 10,\n"
"            \"limit\"      : 10\n"
"          }\n"
"        }\n"
"      }\n"
"    }\n"
"    => returns 10 results from the 11th to the 20th."
msgstr ""

msgid ""
"    search\n"
"    {\n"
"      \"queries\" : {\n"
"        \"people\" : {\n"
"          \"source\" : \"Person\",\n"
"          \"output\" : {\n"
"            \"elements\"   : [\"count\", \"records\"],\n"
"            \"attributes\" : [\"name\"],\n"
"            \"offset\"     : 20,\n"
"            \"limit\"      : 10\n"
"          }\n"
"        }\n"
"      }\n"
"    }\n"
"    => returns 10 results from the 21th to the 30th."
msgstr ""

msgid ""
"The value `-1` is not recommended  for the `limit` parameter, in regular use. "
"It will return too much results and increase traffic loads. Instead `100` or l"
"ess value is recommended for the `limit` parameter. Then you should do paging "
"by the `offset` parameter."
msgstr ""

msgid "See [`output` parameter](#query-output) for more details."
msgstr ""

msgid ""
"Moreover, you can do paging via [the `sortBy` parameter](#query-sortBy-hash) a"
"nd it will work faster than the paging by the `output` parameter. You should d"
"o paging via the `sortBy` parameter instead of `output` as much as possible."
msgstr ""

msgid "#### Output format {#usage-format}"
msgstr ""

msgid ""
"Search result records in examples above are shown as arrays of arrays, but the"
"y can be returned as arrays of hashes by the [`output`](#query-output)'s `form"
"at` parameter. If you specify `complex` for the `format`, then results are ret"
"urned like:"
msgstr ""

msgid ""
"    search\n"
"    {\n"
"      \"queries\" : {\n"
"        \"people\" : {\n"
"          \"source\" : \"Person\",\n"
"          \"output\" : {\n"
"            \"elements\"   : [\"count\", \"records\"],\n"
"            \"attributes\" : [\"_key\", \"name\", \"age\", \"sex\", \"job\", \"note\"],\n"
"            \"limit\"      : 3,\n"
"            \"format\"     : \"complex\"\n"
"          }\n"
"        }\n"
"      }\n"
"    }"
msgstr ""

msgid ""
"    => search.result\n"
"       {\n"
"         \"people\" : {\n"
"           \"count\" : 9,\n"
"           \"records\" : [\n"
"             { \"_key\" : \"Alice Arnold\",\n"
"               \"name\" : \"Alice Arnold\",\n"
"               \"age\"  : 20,\n"
"               \"sex\"  : \"female\",\n"
"               \"job\"  : \"announcer\",\n"
"               \"note\" : \"\" },\n"
"             { \"_key\" : \"Alice Cooper\",\n"
"               \"name\" : \"Alice Cooper\",\n"
"               \"age\"  : 30,\n"
"               \"sex\"  : \"male\",\n"
"               \"job\"  : \"musician\",\n"
"               \"note\" : \"\" },\n"
"             { \"_key\" : \"Alice Miller\",\n"
"               \"name\" : \"Alice Miller\",\n"
"               \"age\"  : 25,\n"
"               \"sex\"  : \"female\",\n"
"               \"job\"  : \"doctor\",\n"
"               \"note\" : \"\" }\n"
"           ]\n"
"         }\n"
"       }"
msgstr ""

msgid ""
"Search result records will be returned as an array of hashes, when you specify"
" `complex` as the value of the `format` parameter.\n"
"Otherwise - `simple` or nothing is specified -, records are returned as an arr"
"ay of arrays."
msgstr ""

msgid ""
"See [`output` parameters](#query-output) and [responses](#response) for more d"
"etails."
msgstr ""

msgid "### Advanced usage {#usage-advanced}"
msgstr ""

msgid "#### Grouping {#usage-group}"
msgstr ""

msgid ""
"You can group search results by a column, via the [`groupBy`](#query-groupBy) "
"parameters. For example, following query returns a result grouped by the `sex`"
" column, with the count of original search results:"
msgstr ""

msgid ""
"    search\n"
"    {\n"
"      \"queries\" : {\n"
"        \"sexuality\" : {\n"
"          \"source\"  : \"Person\",\n"
"          \"groupBy\" : \"sex\",\n"
"          \"output\"  : {\n"
"            \"elements\"   : [\"count\", \"records\"],\n"
"            \"attributes\" : [\"_key\", \"_nsubrecs\"],\n"
"            \"limit\"      : -1\n"
"          }\n"
"        }\n"
"      }\n"
"    }"
msgstr ""

msgid ""
"    => search.result\n"
"       {\n"
"         \"sexuality\" : {\n"
"           \"count\" : 2,\n"
"           \"records\" : \n"
"             [\"female\", 2],\n"
"             [\"male\", 7]\n"
"           ]\n"
"         }\n"
"       }"
msgstr ""

msgid ""
"The result means: \"There are two `female` records and seven `male` records, mo"
"reover there are two types for the column `sex`."
msgstr ""

msgid ""
"You can also extract the ungrouped record by the `maxNSubRecords` parameter an"
"d the `_subrecs` virtual column. For example, following query returns the resu"
"lt grouped by `sex` and extract two ungrouped records:"
msgstr ""

msgid ""
"    search\n"
"    {\n"
"      \"queries\" : {\n"
"        \"sexuality\" : {\n"
"          \"source\"  : \"Person\",\n"
"          \"groupBy\" : {\n"
"            \"keys\"           : \"sex\",\n"
"            \"maxNSubRecords\" : 2\n"
"          }, \n"
"          \"output\"  : {\n"
"            \"elements\"   : [\"count\", \"records\"],\n"
"            \"attributes\" : [\n"
"              \"_key\",\n"
"              \"_nsubrecs\",\n"
"              { \"label\"      : \"subrecords\",\n"
"                \"source\"     : \"_subrecs\",\n"
"                \"attributes\" : [\"name\"] }\n"
"            ],\n"
"            \"limit\"      : -1\n"
"          }\n"
"        }\n"
"      }\n"
"    }"
msgstr ""

msgid ""
"    => search.result\n"
"       {\n"
"         \"sexuality\" : {\n"
"           \"count\" : 2,\n"
"           \"records\" : \n"
"             [\"female\", 2, [[\"Alice Arnold\"], [\"Alice Miller\"]]],\n"
"             [\"male\",   7, [[\"Alice Cooper\"], [\"Bob Dole\"]]]\n"
"           ]\n"
"         }\n"
"       }"
msgstr ""

msgid "See [`groupBy` parameters](#query-groupBy) for more details."
msgstr ""

msgid ""
"*Note: The version {{ site.droonga_version }} doesn't support grouping of sear"
"ch results from partitioned datasets. You should use this feature only on sing"
"le partition datasets, while you are using the version {{ site.droonga_version"
" }}."
msgstr ""

msgid "#### Multiple search queries in one request {#usage-multiple-queries}"
msgstr ""

msgid ""
"Multiple queries can be appear in one `search` command. For example, following"
" query searches people yanger than 25 or older than 40:"
msgstr ""

msgid ""
"    search\n"
"    {\n"
"      \"queries\" : {\n"
"        \"junior\" : {\n"
"          \"source\"    : \"Person\",\n"
"          \"condition\" : \"age <= 25\",\n"
"          \"output\"    : {\n"
"            \"elements\"   : [\"count\", \"records\"],\n"
"            \"attributes\" : [\"name\", \"age\"],\n"
"            \"limit\"      : -1\n"
"          }\n"
"        },\n"
"        \"senior\" : {\n"
"          \"source\"    : \"Person\",\n"
"          \"condition\" : \"age >= 40\",\n"
"          \"output\"    : {\n"
"            \"elements\"   : [\"count\", \"records\"],\n"
"            \"attributes\" : [\"name\", \"age\"],\n"
"            \"limit\"      : -1\n"
"          }\n"
"        }\n"
"      }\n"
"    }"
msgstr ""

msgid ""
"    => search.result\n"
"       {\n"
"         \"junior\" : {\n"
"           \"count\" : 2,\n"
"           \"records\" : [\n"
"             [\"Alice Arnold\", 20],\n"
"             [\"Alice Miller\", 25]\n"
"           ]\n"
"         },\n"
"         \"senior\" : {\n"
"           \"count\" : 3,\n"
"           \"records\" : [\n"
"             [\"Bob Dole\", 42],\n"
"             [\"Bob Ross\", 54],\n"
"             [\"Lewis Carroll\", 66]\n"
"           ]\n"
"         }\n"
"       }"
msgstr ""

msgid ""
"Each search result can be identified by the temporary name given for each quer"
"y."
msgstr ""

msgid "#### Chained search queries {#usage-chain}"
msgstr ""

msgid ""
"You can specify not only an existing table, but search result of another query"
" also, as the value of the \"source\" parameter. Chained search queries can do f"
"lexible search in just one request."
msgstr ""

msgid ""
"For example, the following query returns two results: records that their `name"
"` contains `Alice`, and results grouped by their `sex` column:"
msgstr ""

msgid ""
"    search\n"
"    {\n"
"      \"queries\" : {\n"
"        \"people\" : {\n"
"          \"source\"    : \"Person\",\n"
"          \"condition\" : \"name @ 'Alice'\"\n"
"          \"output\"    : {\n"
"            \"elements\"   : [\"count\", \"records\"],\n"
"            \"attributes\" : [\"name\", \"age\"],\n"
"            \"limit\"      : -1\n"
"          }\n"
"        },\n"
"        \"sexuality\" : {\n"
"          \"source\"  : \"people\",\n"
"          \"groupBy\" : \"sex\",\n"
"          \"output\"  : {\n"
"            \"elements\"   : [\"count\", \"records\"],\n"
"            \"attributes\" : [\"_key\", \"_nsubrecs\"],\n"
"            \"limit\"      : -1\n"
"          }\n"
"        }\n"
"      }\n"
"    }"
msgstr ""

msgid ""
"    => search.result\n"
"       {\n"
"         \"people\" : {\n"
"           \"count\" : 8,\n"
"           \"records\" : [\n"
"             [\"Alice Cooper\", 30],\n"
"             [\"Alice Miller\", 25],\n"
"             [\"Alice Arnold\", 20]\n"
"           ]\n"
"         },\n"
"         \"sexuality\" : {\n"
"           \"count\" : 2,\n"
"           \"records\" : \n"
"             [\"female\", 2],\n"
"             [\"male\", 1]\n"
"           ]\n"
"         }\n"
"       }"
msgstr ""

msgid ""
"You can use search queries just internally, without output. For example, the f"
"ollowing query does: 1) group records of the Person table by their `job` colum"
"n, and 2) extract grouped results which have the text `player` in their `job`."
" (*Note: The second query will be done without indexes, so it can be slow.)"
msgstr ""

msgid ""
"    search\n"
"    {\n"
"      \"queries\" : {\n"
"        \"allJob\" : {\n"
"          \"source\"  : \"Person\",\n"
"          \"groupBy\" : \"job\"\n"
"        },\n"
"        \"playerJob\" : {\n"
"          \"source\"    : \"allJob\",\n"
"          \"condition\" : \"_key @ `player`\",\n"
"          \"output\"  : {\n"
"            \"elements\"   : [\"count\", \"records\"],\n"
"            \"attributes\" : [\"_key\", \"_nsubrecs\"],\n"
"            \"limit\"      : -1\n"
"          }\n"
"        }\n"
"      }\n"
"    }"
msgstr ""

msgid ""
"    => search.result\n"
"       {\n"
"         \"playerJob\" : {\n"
"           \"count\" : 2,\n"
"           \"records\" : [\n"
"             [\"basketball player\", 1],\n"
"             [\"baseball player\", 1]\n"
"           ]\n"
"         }\n"
"       }"
msgstr ""

msgid "## Parameters {#parameters}"
msgstr ""

msgid "### Container parameters {#container-parameters}"
msgstr ""

msgid "#### `timeout` {#parameter-timeout}"
msgstr ""

msgid "※註：このParametersはバージョン {{ site.droonga_version }} では未実装です。指定しても機能しません。"
msgstr ""

msgid ""
"Abstract\n"
": 検索処理がタイムアウトするまでの時間を指定します。"
msgstr ""

msgid ""
"値\n"
": タイムアウトするまでの時間の数値（単位：ミリ秒）。"
msgstr ""

msgid ""
"指定の省略\n"
": 可能。"
msgstr ""

msgid ""
"省略時の初期値\n"
": 10000（10秒）"
msgstr ""

msgid ""
"指定した時間以内に Droonga Engine が検索の処理を完了できなかった場合、Droonga はその時点で検索処理を打ち切り、エラーを返却します。\n"
"クライアントは、この時間を過ぎた後は検索処理に関するリソースを解放して問題ありません。"
msgstr ""

msgid "#### `queries` {#parameter-queries}"
msgstr ""

msgid ""
"Abstract\n"
": 検索クエリとして、検索の条件と出力の形式を指定します。"
msgstr ""

msgid ""
"値\n"
": 個々の検索クエリの名前をキー、[個々の検索クエリ](#query-parameters)の内容を値としたハッシュ。"
msgstr ""

msgid ""
"指定の省略\n"
": 不可能。"
msgstr ""

msgid "`search` は、複数の検索クエリを一度に受け取る事ができます。"
msgstr ""

msgid ""
"バージョン {{ site.droonga_version }} ではすべての検索クエリの結果を一度にレスポンスとして返却する動作のみ対応していますが、将来"
"的には、それぞれの検索クエリの結果を分割して受け取る（結果が出た物からバラバラに受け取る）動作にも対応する予定です。"
msgstr ""

msgid "### 個々の検索クエリのParameters {#query-parameters}"
msgstr ""

msgid "#### `source` {#query-source}"
msgstr ""

msgid ""
"Abstract\n"
": 検索対象とするデータソースを指定します。"
msgstr ""

msgid ""
"値\n"
": テーブル名の文字列、または結果を参照する別の検索クエリの名前の文字列。"
msgstr ""

msgid "別の検索クエリの処理結果をデータソースとして指定する事により、ファセット検索などを行う事ができます。"
msgstr ""

msgid ""
"なお、その場合の各検索クエリの実行順（依存関係）は Droonga が自動的に解決します。\n"
"依存関係の順番通りに各検索クエリを並べて記述する必要はありません。"
msgstr ""

msgid "#### `condition` {#query-condition}"
msgstr ""

msgid ""
"Abstract\n"
": 検索の条件を指定します。"
msgstr ""

msgid ""
"値\n"
": 以下のパターンのいずれかをとります。"
msgstr ""

msgid ""
"  1. [スクリプトSyntax](http://groonga.org/ja/docs/reference/grn_expr/script_syntax"
".html)形式の文字列。\n"
"  2. [スクリプトSyntax](http://groonga.org/ja/docs/reference/grn_expr/script_syntax"
".html)形式の文字列を含むハッシュ。\n"
"  3. [クエリーSyntax](http://groonga.org/ja/docs/reference/grn_expr/query_syntax.h"
"tml)形式の文字列を含むハッシュ。\n"
"  4. 1〜3および演算子の文字列の配列。"
msgstr ""

msgid ""
"省略時の既定値\n"
": なし（検索しない）。"
msgstr ""

msgid ""
"検索条件を指定した場合、検索条件に該当したすべてのレコードがその後の処理の対象となります。\n"
"検索条件を指定しなかった場合、データソースに含まれるすべてのレコードがその後の処理の対象となります。"
msgstr ""

msgid "##### スクリプトSyntax形式の文字列による検索条件 {#query-condition-script-syntax-string}"
msgstr ""

msgid "以下のような形式の文字列で検索条件を指定します。"
msgstr ""

msgid "    \"name == 'Alice' && age >= 20\""
msgstr ""

msgid "上記の例は「 `name` カラムの値が `\"Alice\"` と等しく、且つ `age` カラムの値が20以上である」という意味になります。"
msgstr ""

msgid ""
"詳細は[Groonga のスクリプトSyntaxのリファレンス](http://groonga.org/ja/docs/reference/grn_expr"
"/script_syntax.html)を参照して下さい。"
msgstr ""

msgid "##### スクリプトSyntax形式の文字列を含むハッシュによる検索条件 {#query-condition-script-syntax-hash}"
msgstr ""

msgid ""
"[スクリプトSyntax形式の文字列による検索条件](#query-condition-script-syntax-string)をベースとした、以下のよう"
"な形式のハッシュで検索条件を指定します。"
msgstr ""

msgid ""
"    {\n"
"      \"script\"      : \"name == 'Alice' && age >= 20\",\n"
"      \"allowUpdate\" : true\n"
"    }"
msgstr ""

msgid "（詳細未稿：仕様が未確定、動作が不明、未実装のため）"
msgstr ""

msgid "##### クエリーSyntax形式の文字列を含むハッシュ {#query-condition-query-syntax-hash}"
msgstr ""

msgid "以下のような形式のハッシュで検索条件を指定します。"
msgstr ""

msgid ""
"    {\n"
"      \"query\"                    : \"Alice\",\n"
"      \"matchTo\"                  : [\"name * 2\", \"job * 1\"],\n"
"      \"defaultOperator\"          : \"&&\",\n"
"      \"allowPragma\"              : true,\n"
"      \"allowColumn\"              : true,\n"
"      \"matchEscalationThreshold\" : 10\n"
"    }"
msgstr ""

msgid ""
"`query`\n"
": クエリを文字列で指定します。\n"
"  詳細は[Groonga のクエリーSyntaxの仕様](http://groonga.org/ja/docs/reference/grn_expr/qu"
"ery_syntax.html)を参照して下さい。\n"
"  このParametersは省略できません。"
msgstr ""

msgid ""
"`matchTo`\n"
": 検索対象のカラムを、カラム名の文字列またはその配列で指定します。\n"
"  カラム名の後に `name * 2` のような指定を加える事で、重み付けができます。\n"
"  このParametersは省略可能で、省略時の初期値は `\"_key\"` です。\n"
"  <!-- ↑要検証！ -->"
msgstr ""

msgid ""
"`defaultOperator`\n"
": `query` に複数のクエリが列挙されている場合の既定の論理演算の条件を指定します。\n"
"  以下のいずれかの文字列を指定します。"
msgstr ""

msgid ""
"   * `\"&&\"` : AND条件と見なす。\n"
"   * `\"||\"` : OR条件と見なす。\n"
"   * `\"-\"`  : [論理否定](http://groonga.org/ja/docs/reference/grn_expr/query_synta"
"x.html#logical-not)条件と見なす。"
msgstr ""

msgid "  このParametersは省略可能で、省略時の初期値は `\"&&\"` です。"
msgstr ""

msgid ""
"`allowPragma`\n"
": `query` の先頭において、`*E-1` のようなプラグマの指定を許容するかどうかを真偽値で指定します。\n"
"  このParametersは省略可能で、省略時の初期値は `true` （プラグマの指定を許容する）です。"
msgstr ""

msgid ""
"`allowColumn`\n"
": `query` において、カラム名を指定した `name:Alice` のような書き方を許容するかどうかを真偽値で指定します。\n"
"  このParametersは省略可能で、省略時の初期値は `true` （カラム名の指定を許容する）です。"
msgstr ""

msgid ""
"`matchEscalationThreshold`\n"
": 検索方法をエスカレーションするかどうかを決定するための閾値を指定します。\n"
"  インデックスを用いた全文検索のヒット件数がこの閾値以下であった場合は、非分かち書き検索、部分一致検索へエスカレーションします。\n"
"  詳細は [Groonga の検索の仕様の説明](http://groonga.org/ja/docs/spec/search.html)を参照して下さい"
"。\n"
"  このParametersは省略可能で、省略時の初期値は `0` です。"
msgstr ""

msgid "##### 配列による検索条件 {#query-condition-array}"
msgstr ""

msgid "以下のような形式の配列で検索条件を指定します。"
msgstr ""

msgid ""
"    [\n"
"      \"&&\",\n"
"      検索条件1,\n"
"      検索条件2,\n"
"      ...\n"
"    ]"
msgstr ""

msgid "配列の最初の要素は、論理演算子を以下のいずれかの文字列で指定します。"
msgstr ""

msgid ""
" * `\"&&\"` : AND条件と見なす。\n"
" * `\"||\"` : OR条件と見なす。\n"
" * `\"-\"`  : [論理否定](http://groonga.org/ja/docs/reference/grn_expr/query_syntax."
"html#logical-not)条件と見なす。"
msgstr ""

msgid ""
"配列の2番目以降の要素で示された検索条件について、1番目の要素で指定した論理演算子による論理演算を行います。\n"
"例えば以下は、スクリプトSyntax形式の文字列による検索条件2つによるAND条件であると見なされ、「 `name` カラムの値が `\"Alice\"` と等"
"しく、且つ `age` カラムの値が20以上である」という意味になります。"
msgstr ""

msgid "    [\"&&\", \"name == 'Alice'\", \"age >= 20\"]"
msgstr ""

msgid ""
"配列を入れ子にする事により、より複雑な検索条件を指定する事もできます。\n"
"例えば以下は、「 `name` カラムの値が `\"Alice\"` と等しく、且つ `age` カラムの値が20以上であるが、 `job` カラムの値が `\""
"engineer\"` ではない」という意味になります。"
msgstr ""

msgid ""
"    [\n"
"      \"-\",\n"
"      [\"&&\", \"name == 'Alice'\", \"age >= 20\"],\n"
"      \"job == 'engineer'\"\n"
"    ]"
msgstr ""

msgid "#### `sortBy` {#query-sortBy}"
msgstr ""

msgid ""
"Abstract\n"
": ソートの条件および取り出すレコードの範囲を指定します。"
msgstr ""

msgid ""
"  1. カラム名の文字列の配列。\n"
"  2. ソート条件と取り出すレコードの範囲を指定するハッシュ。"
msgstr ""

msgid ""
"省略時の既定値\n"
": なし（ソートしない）。"
msgstr ""

msgid "レコードの範囲を指定した場合、指定に基づいてソートした結果から、さらに指定の範囲のレコードを取り出した結果がその後の処理の対象となります。"
msgstr ""

msgid "##### 基本的なソート条件の指定 {#query-sortBy-array}"
msgstr ""

msgid "ソート条件はカラム名の文字列の配列として指定します。"
msgstr ""

msgid ""
"Droongaはまず最初に指定したカラムの値でレコードをソートし、カラムの値が同じレコードが複数あった場合は2番目に指定したカラムの値でさらにソートする、と"
"いう形で、すべての指定カラムの値に基づいてソートを行います。"
msgstr ""

msgid "ソート対象のカラムを1つだけ指定する場合であっても、必ず配列として指定する必要があります。"
msgstr ""

msgid "ソート順序は指定したカラムの値での昇順となります。カラム名の前に `-` を加えると降順となります。"
msgstr ""

msgid "例えば以下は、「 `name` の値で昇順にソートし、同じ値のレコードはさらに `age` の値で降順にソートする」という意味になります。"
msgstr ""

msgid "    [\"name\", \"-age\"]"
msgstr ""

msgid "##### ソート結果から取り出すレコードの範囲の指定 {#query-sortBy-hash}"
msgstr ""

msgid "ソートの指定において、以下の形式でソート結果から取り出すレコードの範囲を指定する事ができます。"
msgstr ""

msgid ""
"    {\n"
"      \"keys\"   : [基本的なソート条件の指定],\n"
"      \"offset\" : ページングの起点,\n"
"      \"limit\"  : 取り出すレコード数\n"
"    }"
msgstr ""

msgid ""
"`keys`\n"
": ソート条件を[基本的なソート条件の指定](#query-sortBy-array)の形式で指定します。\n"
"  このParametersは省略できません。"
msgstr ""

msgid ""
"`offset`\n"
": 取り出すレコードのページングの起点を示す `0` または正の整数。"
msgstr ""

msgid "  このParametersは省略可能で、省略時の既定値は `0` です。"
msgstr ""

msgid ""
"`limit`\n"
": 取り出すレコード数を示す `-1` 、 `0` 、または正の整数。\n"
"  `-1`を指定すると、すべてのレコードを取り出します。"
msgstr ""

msgid "  このParametersは省略可能で、省略時の既定値は `-1` です。"
msgstr ""

msgid "例えば以下は、ソート結果の10番目から20番目までのレコードを取り出すという意味になります。"
msgstr ""

msgid ""
"    {\n"
"      \"keys\"   : [\"name\", \"-age\"],\n"
"      \"offset\" : 10,\n"
"      \"limit\"  : 10\n"
"    }"
msgstr ""

msgid ""
"これらの指定を行った場合、取り出されたレコードのみがその後の処理の対象となります。\n"
"そのため、 `output` における `offset` および `limit` の指定よりも高速に動作します。"
msgstr ""

msgid "#### `groupBy` {#query-groupBy}"
msgstr ""

msgid ""
"Abstract\n"
": 処理対象のレコード群を集約する条件を指定します。"
msgstr ""

msgid ""
"  1. 基本的な集約条件（カラム名または式）の文字列。\n"
"  2. 複雑な集約条件を指定するハッシュ。"
msgstr ""

msgid ""
"省略時の既定値\n"
": なし（集約しない）。"
msgstr ""

msgid "集約条件を指定した場合、指定に基づいてレコードを集約した結果のレコードがその後の処理の対象となります。"
msgstr ""

msgid ""
"※註：バージョン {{ site.droonga_version }} では、複数パーティションに別れたデータセットでの検索結果を集約した場合、集約結果に同"
"一キーのレコードが複数登場することがあります（パーティションごとの集約結果のマージ処理が未実装であるため）。バージョン {{ site.droonga_ve"
"rsion }} では、この機能はパーティション分けを伴わないデータセットでのみの利用を推奨します。"
msgstr ""

msgid "##### 基本的な集約条件の指定 {#query-groupBy-string}"
msgstr ""

msgid "基本的な集約条件では、処理対象のレコード群が持つカラムの名前を文字列として指定します。"
msgstr ""

msgid ""
"Droongaはそのカラムの値が同じであるレコードを集約し、カラムの値をキーとした新しいレコード群を結果として出力します。\n"
"集約結果のレコードは以下のカラムを持ちます。"
msgstr ""

msgid ""
"`_key`\n"
": 集約前のレコード群における、集約対象のカラムの値です。"
msgstr ""

msgid ""
"`_nsubrecs`\n"
": 集約前のレコード群における、集約対象のカラムの値が一致するレコードの総数を示す数値です。"
msgstr ""

msgid ""
"例えば以下は、`job` カラムの値でレコードを集約し、`job` カラムの値としてどれだけの種類が存在しているのか、および、各 `job` の値を持つレコ"
"ードが何件存在しているのかを集約結果として取り出すという意味になります。"
msgstr ""

msgid "    \"job\""
msgstr ""

msgid "##### 複雑な集約条件の指定 {#query-groupBy-hash}"
msgstr ""

msgid "集約の指定において、集約結果の一部として出力する集約前のレコードの数を、以下の形式で指定する事ができます。"
msgstr ""

msgid ""
"    {\n"
"      \"key\"            : \"基本的な集約条件\",\n"
"      \"maxNSubRecords\" : 集約結果の一部として出力する集約前のレコードの数\n"
"    }"
msgstr ""

msgid ""
"`key`\n"
": [基本的な集約条件の指定](#query-groupBy-string)の形式による、集約条件を指定する文字列。\n"
"  このParametersは省略できません。"
msgstr ""

msgid ""
"`maxNSubRecords`\n"
": 集約結果の一部として出力する集約前のレコードの最大数を示す `0` または正の整数。\n"
"  `-1` は指定できません。"
msgstr ""

msgid ""
"例えば以下は、`job` カラムの値でレコードを集約した結果について、各 `job` カラムの値を含んでいるレコードを代表として1件ずつ取り出すという意味に"
"なります。"
msgstr ""

msgid ""
"    {\n"
"      \"key\"            : \"job\",\n"
"      \"maxNSubRecords\" : 1\n"
"    }"
msgstr ""

msgid ""
"集約結果のレコードは、[基本的な集約条件の指定](#query-groupBy-string)の集約結果のレコード群が持つすべてのカラムに加えて、以下のカラ"
"ムを持ちます。"
msgstr ""

msgid ""
"`_subrecs`\n"
": 集約前のレコード群における、集約対象のカラムの値が一致するレコードの配列。"
msgstr ""

msgid "#### `output` {#query-output}"
msgstr ""

msgid ""
"Abstract\n"
": 処理結果の出力形式を指定します。"
msgstr ""

msgid ""
"値\n"
": 出力形式を指定するハッシュ。"
msgstr ""

msgid ""
"省略時の既定値\n"
": なし（結果を出力しない）。"
msgstr ""

msgid ""
"指定を省略した場合、その検索クエリの検索結果はレスポンスには出力されません。\n"
"集約操作などのために必要な中間テーブルにあたる検索結果を求めるだけの検索クエリにおいては、 `output` を省略して処理時間や転送するデータ量を減らすこ"
"とができます。"
msgstr ""

msgid "出力形式は、以下の形式のハッシュで指定します。"
msgstr ""

msgid ""
"    {\n"
"      \"elements\"   : [出力する情報の配列],\n"
"      \"format\"     : \"検索結果のレコードの出力スタイル\",\n"
"      \"offset\"     : ページングの起点,\n"
"      \"limit\"      : 出力するレコード数,\n"
"      \"attributes\" : [レコードのカラムの出力指定の配列]\n"
"    }"
msgstr ""

msgid ""
"`elements`\n"
": その検索クエリの結果として[レスポンス](#response)に出力する情報を、プロパティ名の文字列の配列で指定します。\n"
"  以下の項目を指定できます。項目は1つだけ指定する場合であっても必ず配列で指定します。"
msgstr ""

msgid ""
"   * `\"startTime\"` ※バージョン {{ site.droonga_version }} では未実装です。指定しても機能しません。\n"
"   * `\"elapsedTime\"` ※バージョン {{ site.droonga_version }} では未実装です。指定しても機能しません。\n"
"   * `\"count\"`\n"
"   * `\"attributes\"` ※バージョン {{ site.droonga_version }} では未実装です。指定しても機能しません。\n"
"   * `\"records\"`"
msgstr ""

msgid "  このParametersは省略可能で、省略時の初期値はありません（結果を何も出力しません）。"
msgstr ""

msgid ""
"`format`\n"
": 検索結果のレコードの出力スタイルを指定します。\n"
"  以下のいずれかの値（文字列）を取ります。"
msgstr ""

msgid ""
"   * `\"simple\"`  : 個々のレコードを配列として出力します。\n"
"   * `\"complex\"` : 個々のレコードをハッシュとして出力します。"
msgstr ""

msgid "  このParametersは省略可能で、省略時の初期値は `\"simple\"` です。"
msgstr ""

msgid ""
"`offset`\n"
": 出力するレコードのページングの起点を示す `0` または正の整数。"
msgstr ""

msgid ""
"`limit`\n"
": 出力するレコード数を示す `-1` 、 `0` 、または正の整数。\n"
"  `-1`を指定すると、すべてのレコードを出力します。"
msgstr ""

msgid ""
"`attributes`\n"
": レコードのカラムの値について、出力形式を配列で指定します。\n"
"  個々のカラムの値の出力形式は以下のいずれかで指定します。"
msgstr ""

msgid ""
"   * カラム名の文字列。例は以下の通りです。\n"
"     * `\"name\"` : `name` カラムの値をそのまま `name` カラムとして出力します。\n"
"     * `\"age\"`  : `age` カラムの値をそのまま `age` カラムとして出力します。\n"
"   * 詳細な出力形式指定のハッシュ。例は以下の通りです。\n"
"     * 以下の例は、 `name` カラムの値を `realName` カラムとして出力します。"
msgstr ""

msgid "           { \"label\" : \"realName\", \"source\" : \"name\" }"
msgstr ""

msgid ""
"     * 以下の例は、 `name` カラムの値について、全文検索にヒットした位置を強調したHTMLコード片の文字列を `html` カラムとして出力し"
"ます。"
msgstr ""

msgid "           { \"label\" : \"html\", \"source\": \"snippet_html(name)\" }"
msgstr ""

msgid ""
"     * 以下の例は、`country` カラムについて、すべてのレコードの当該カラムの値が文字列 `\"Japan\"` であるものとして出力します。\n"
"       （存在しないカラムを実際に作成する前にクライアント側の挙動を確認したい場合などに、この機能が利用できます。）"
msgstr ""

msgid "           { \"label\" : \"country\", \"source\" : \"'Japan'\" }"
msgstr ""

msgid "     * 以下の例は、集約前の元のレコードの総数を、集約後のレコードの `\"itemsCount\"` カラムの値として出力します。"
msgstr ""

msgid "           { \"label\" : \"itemsCount\", \"source\" : \"_nsubrecs\", }"
msgstr ""

msgid ""
"     * 以下の例は、集約前の元のレコードの配列を、集約後のレコードの `\"items\"` カラムの値として出力します。\n"
"       `\"attributes\"` は、この項の説明と同じ形式で指定します。"
msgstr ""

msgid ""
"           { \"label\" : \"items\", \"source\" : \"_subrecs\",\n"
"             \"attributes\": [\"name\", \"price\"] }"
msgstr ""

msgid "  このParametersは省略可能で、省略時の既定値はありません（カラムを何も出力しません）。"
msgstr ""

msgid "## レスポンス {#response}"
msgstr ""

msgid ""
"このコマンドは、個々の検索クエリの名前をキー、[個々の検索クエリ](#query-parameters)の処理結果を値とした、以下のようなハッシュを返却しま"
"す。"
msgstr ""

msgid ""
"    {\n"
"      \"検索クエリ1の名前\" : {\n"
"        \"startTime\"   : \"検索を開始した時刻\",\n"
"        \"elapsedTime\" : 検索にかかった時間（単位：ミリ秒）,\n"
"        \"count\"       : 検索条件にヒットしたレコードの総数,\n"
"        \"attributes\"  : [出力されたレコードのカラムの情報],\n"
"        \"records\"     : [出力されたレコードの配列]\n"
"      },\n"
"      \"検索クエリ2の名前\" : 検索クエリの検索結果,\n"
"      ...\n"
"    }"
msgstr ""

msgid ""
"検索クエリの処理結果のハッシュは以下の項目を持つことができ、[検索クエリの `output`](#query-output) の `elements` で明"
"示的に指定された項目のみが出力されます。"
msgstr ""

msgid "### `startTime` {#response-query-startTime}"
msgstr ""

msgid "検索を開始した時刻（ローカル時刻）の文字列です。"
msgstr ""

msgid ""
"形式は、[W3C-DTF](http://www.w3.org/TR/NOTE-datetime \"Date and Time Formats\")のタイムゾ"
"ーンを含む形式となります。\n"
"例えば以下の要領です。"
msgstr ""

msgid "    2013-11-29T08:15:30+09:00"
msgstr ""

msgid "### `elapsedTime` {#response-query-elapsedTime}"
msgstr ""

msgid "検索にかかった時間の数値（単位：ミリ秒）です。"
msgstr ""

msgid "### `count` {#response-query-count}"
msgstr ""

msgid ""
"検索条件に該当するレコードの総数の数値です。\n"
"この値は、検索クエリの [`sortBy`](#query-sortBy) や [`output`](#query-output) における `offset"
"` および `limit` の指定の影響を受けません。"
msgstr ""

msgid "### `attributes` および `records` {#response-query-attributes-and-records}"
msgstr ""

msgid ""
" * `attributes` は出力されたレコードのカラムの情報を示す配列またはハッシュです。\n"
" * `records` は出力されたレコードの配列です。"
msgstr ""

msgid ""
"`attributes` および `records` の出力形式は[検索クエリの `output`](#query-output) の `format` の"
"指定に従って以下の2通りに別れます。"
msgstr ""

msgid "#### 単純な形式のレスポンス {#response-query-simple-attributes-and-records}"
msgstr ""

msgid "`format` が　`\"simple\"` の場合、個々の検索クエリの結果は以下の形を取ります。"
msgstr ""

msgid ""
"    {\n"
"      \"startTime\"   : \"検索を開始した時刻\",\n"
"      \"elapsedTime\" : 検索にかかった時間,\n"
"      \"count\"       : レコードの総数,\n"
"      \"attributes\"  : [\n"
"        { \"name\"   : \"カラム1の名前\",\n"
"          \"type\"   : \"カラム1の型\",\n"
"          \"vector\" : カラム1がベクターカラムかどうか },\n"
"        { \"name\"   : \"カラム2の名前\",\n"
"          \"type\"   : \"カラム2の型\",\n"
"          \"vector\" : カラム2がベクターカラムかどうか },\n"
"        ...\n"
"      ],\n"
"      \"records\"     : [\n"
"        [レコード1のカラム1の値, レコード1のカラム2の値, ...],\n"
"        [レコード2のカラム1の値, レコード2のカラム2の値, ...],\n"
"        ...\n"
"      ]\n"
"    }"
msgstr ""

msgid ""
"これは、受け取ったデータの扱いやすさよりも、データの転送量を小さく抑える事を優先する出力形式です。\n"
"大量のレコードを検索結果として受け取る場合や、多量のアクセスが想定される場合などに適しています。"
msgstr ""

msgid "##### `attributes` {#response-query-simple-attributes}"
msgstr ""

msgid "※註：バージョン {{ site.droonga_version }} では未実装です。この情報は実際には出力されません。"
msgstr ""

msgid ""
"出力されたレコードのカラムについての情報の配列で、[検索クエリの `output`](#query-output) における `attributes` で指"
"定された順番で個々のカラムの情報を含みます。"
msgstr ""

msgid "個々のカラムの情報はハッシュの形をとり、以下の情報を持ちます。"
msgstr ""

msgid ""
"`name`\n"
": カラムの出力名の文字列です。[検索クエリの `output`](#query-output) における `attributes` の指定内容に基づきます"
"。"
msgstr ""

msgid ""
"`type`\n"
": カラムの値の型を示す文字列です。\n"
"  値は[Groonga のプリミティブなデータ型](http://groonga.org/ja/docs/reference/types.html)の名前"
"か、もしくはテーブル名です。"
msgstr ""

msgid ""
"`vector`\n"
": カラムが[ベクター型](http://groonga.org/ja/docs/tutorial/data.html#vector-types)かどうかを"
"示す真偽値です。\n"
"  以下のいずれかの値をとります。"
msgstr ""

msgid ""
"   * `true`  : カラムはベクター型である。\n"
"   * `false` : カラムはベクター型ではない（スカラー型である）。"
msgstr ""

msgid "##### `records` {#response-query-simple-records}"
msgstr ""

msgid "出力されたレコードの配列です。"
msgstr ""

msgid ""
"個々のレコードは配列の形をとり、[検索クエリの `output`](#query-output) における `attributes` で指定された各カラムの"
"値を同じ順番で含みます。"
msgstr ""

msgid ""
"[日時型](http://groonga.org/ja/docs/tutorial/data.html#date-and-time-type)のカラムの値は"
"、[W3C-DTF](http://www.w3.org/TR/NOTE-datetime \"Date and Time Formats\")のタイムゾーンを"
"含む形式の文字列として出力されます。"
msgstr ""

msgid "#### 複雑な形式のレスポンス {#response-query-complex-attributes-and-records}"
msgstr ""

msgid "`format` が　`\"complex\"` の場合、個々の検索クエリの結果は以下の形を取ります。"
msgstr ""

msgid ""
"    {\n"
"      \"startTime\"   : \"検索を開始した時刻\",\n"
"      \"elapsedTime\" : 検索にかかった時間,\n"
"      \"count\"       : レコードの総数,\n"
"      \"attributes\"  : {\n"
"        \"カラム1の名前\" : { \"type\"   : \"カラム1の型\",\n"
"                            \"vector\" : カラム1がベクターカラムかどうか },\n"
"        \"カラム2の名前\" : { \"type\"   : \"カラム2の型\",\n"
"                            \"vector\" : カラム2がベクターカラムかどうか },\n"
"        ...\n"
"      ],\n"
"      \"records\"     : [\n"
"        { \"カラム1\" : \"レコード1のカラム1の値\",\n"
"          \"カラム2\" : \"レコード1のカラム2の値\",\n"
"          ...                                   },\n"
"        { \"カラム1\" : \"レコード2のカラム1の値\",\n"
"          \"カラム2\" : \"レコード2のカラム2の値\",\n"
"          ...                                   },\n"
"        ...\n"
"      ]\n"
"    }"
msgstr ""

msgid ""
"これは、データの転送量を小さく抑える事よりも、受け取ったデータの扱いやすさを優先する出力形式です。\n"
"検索結果の件数が小さい事があらかじめ分かっている場合や、管理機能などのそれほど多量のアクセスが見込まれない場合などに適しています。"
msgstr ""

msgid "##### `attributes` {#response-query-complex-attributes}"
msgstr ""

msgid ""
"出力されたレコードのカラムについての情報を含むハッシュで、[検索クエリの `output`](#query-output) における `attributes"
"` で指定された出力カラム名がキー、カラムの情報が値となります。"
msgstr ""

msgid "##### `records` {#response-query-complex-records}"
msgstr ""

msgid ""
"個々のレコードは、[検索クエリの `output`](#query-output) における `attributes` で指定された出力カラム名をキー、カラ"
"ムの値を値としたハッシュとなります。"
msgstr ""
