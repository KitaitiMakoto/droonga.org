msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"PO-Revision-Date: 2014-03-05 12:52+0900\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

msgid ""
"---\n"
"title: \"Droonga tutorial: How to backup and restore the database?\"\n"
"layout: en\n"
"---"
msgstr ""
"---\n"
"title: \"Droonga tutorial: データベースのバックアップと復元\"\n"
"layout: ja\n"
"---"

msgid ""
"* TOC\n"
"{:toc}"
msgstr ""

msgid "## The goal of this tutorial"
msgstr "## チュートリアルのゴール"

msgid "Learning steps to backup and restore data by your hand."
msgstr "データのバックアップと復元を手動で行う際の手順を学ぶこと。"

msgid "## Precondition"
msgstr "## 前提条件"

msgid ""
"* You must have an existing [Droonga][] cluster with some data.\n"
"  Please complete the [\"getting started\" tutorial](../groonga/) before this.\n"
"* Your `catalog.json` must have the dataset `Default`.\n"
"  Otherwise, you must change the name of the dataset, like:"
msgstr ""
"* 何らかのデータが格納されている状態の[Droonga][]クラスタがあること。\n"
"  このチュートリアルを始める前に、[「使ってみる」のチュートリアル](../groonga/)を完了している事が望ましいです\n"
"* `catalog.json`に`Default`データセットがあること。\n"
"  別の名前でデータセットを作成していた場合は、名前を変更しておいて下さい："

msgid ""
"        \"datasets\": {\n"
"      -   \"Starbucks\": {\n"
"      +   \"Default\": {"
msgstr ""

msgid ""
"* Your `catalog.json` must have the plugin `dump` in the list of plugins.\n"
"  Otherwise, you must add the plugin to the list of `plugins`, like:"
msgstr ""
"* `catalog.json`に`dump`プラグインが登録済みであること。\n"
"  未登録の場合は、以下のようにして`plugins`の一覧に`dump`を追加しておいて下さい："

msgid ""
"      - \"plugins\": [\"groonga\", \"crud\", \"search\"],\n"
"      + \"plugins\": [\"groonga\", \"crud\", \"search\", \"dump\"],"
msgstr ""

msgid ""
"* Your `catalog.json` must not have any information in its `schema` section.\n"
"  Otherwise, you must make the `schema` section empty, like:"
msgstr ""
"* `catalog.json`の`schema`セクションが情報を含んでいないこと・\n"
"  スキーマを定義していた場合は、以下のようにして`schema`セクションを空にしておいて下さい："

msgid "      \"datasets\": {},"
msgstr ""

msgid "## Backup data in a Droonga cluster"
msgstr "## Droongaクラスタのデータをバックアップする"

msgid "### Install `drndump`"
msgstr "### `drndump` のインストール"

msgid "First, install a command line tool named `drndump` via rubygems:"
msgstr "最初に、Rubygems経由で `drndump` と名付けられたコマンドラインツールをインストールします:"

msgid "    # gem install droonga-engine"
msgstr ""

msgid ""
"After that, establish that the `drndump` command has been installed successful"
"ly:"
msgstr "その後、`drndump` コマンドが正しくインストールできたかどうかを確認します:"

msgid ""
"    # drndump --version\n"
"    drndump 1.0.0"
msgstr ""

msgid "### Dump all data in a Droonga cluster"
msgstr "### Droongaクラスタ内のデータをダンプする"

msgid ""
"The `drndump` command extracts all schema and data as JSONs.\n"
"Let's dump contents of existing your Droonga cluster."
msgstr ""
"`drndump` コマンドはすべてのスキ−マ定義とデータをJSONs形式で取り出します。既存のDroongaクラスタのすべての内容をダンプ出力してみましょ"
"う。"

msgid ""
"For example, if your cluster is constructed from two nodes `192.168.0.10` and "
"`192.168.0.11`, and now you are logged in to the host `192.168.0.12` then the "
"command line is:"
msgstr ""
"例えば、クラスタが `192.168.0.10` と `192.168.0.11` の2つのノードから構成されていて、別のホスト `192.168.0.12"
"` にログインしている場合、コマンドラインは以下の要領です。"

msgid ""
"~~~\n"
"# drndump --host=192.168.0.10 \\\n"
"           --receiver-host=192.168.0.12\n"
"{\n"
"  \"type\": \"table_create\",\n"
"  \"dataset\": \"Default\",\n"
"  \"body\": {\n"
"    \"name\": \"Location\",\n"
"    \"flags\": \"TABLE_HASH_KEY\",\n"
"    \"key_type\": \"WGS84GeoPoint\"\n"
"  }\n"
"}\n"
"...\n"
"{\n"
"  \"dataset\": \"Default\",\n"
"  \"body\": {\n"
"    \"table\": \"Store\",\n"
"    \"key\": \"Fashion Inst of Technology - New York NY\",\n"
"    \"values\": {\n"
"      \"location\": \"146689013x-266380405\"\n"
"    }\n"
"  },\n"
"  \"type\": \"add\"\n"
"}\n"
"{\n"
"  \"type\": \"column_create\",\n"
"  \"dataset\": \"Default\",\n"
"  \"body\": {\n"
"    \"table\": \"Location\",\n"
"    \"name\": \"store\",\n"
"    \"type\": \"Store\",\n"
"    \"flags\": \"COLUMN_INDEX\",\n"
"    \"source\": \"location\"\n"
"  }\n"
"}\n"
"{\n"
"  \"type\": \"column_create\",\n"
"  \"dataset\": \"Default\",\n"
"  \"body\": {\n"
"    \"table\": \"Term\",\n"
"    \"name\": \"store__key\",\n"
"    \"type\": \"Store\",\n"
"    \"flags\": \"COLUMN_INDEX|WITH_POSITION\",\n"
"    \"source\": \"_key\"\n"
"  }\n"
"}\n"
"~~~"
msgstr ""

msgid "Note to these things:"
msgstr "以下の点に注意して下さい:"

msgid ""
" * You must specify valid host name or IP address of one of nodes in the clust"
"er, via the option `--host`.\n"
" * You must specify valid host name or IP address of the computer you are logg"
"ed in, via the option `--receiver-host`.\n"
"   It is used by the Droonga cluster, to send messages.\n"
" * The result includes complete commands to construct a dataset, same to the s"
"ource."
msgstr ""
" * `--host` オプションには、クラスタ内のいずれかのノードの正しいホスト名またはIPアドレスを指定します。\n"
" * `--receiver-host` オプションには、今操作しているコンピュータ自身の正しいホスト名またはIPアドレスを指定します。\n"
"   この情報は、Droongaクラスタがメッセージを送り返すために使われます。\n"
" * コマンドの実行結果は、ダンプ出力元と同じ内容のデータセットを構築するのに必要なすべての情報を含んでいます。"

msgid ""
"The result is printed to the standard output.\n"
"To save it as a JSONs file, you'll use a redirection like:"
msgstr ""
"実行結果は標準出力に出力されます。\n"
"結果をJSONs形式のファイルに保存する場合は、リダイレクトを使って以下のようにして下さい:"

msgid ""
"    # drndump --host=192.168.0.10 \\\n"
"              --receiver-host=192.168.0.12 \\\n"
"        > dump.jsons"
msgstr ""

msgid "## Restore data to a Droonga cluster"
msgstr "## Droongaクラスタのデータを復元する"

msgid "### Install `droonga-client`"
msgstr "### `droonga-client`のインストール"

msgid "The result of `drndump` command is a list of Droonga messages."
msgstr "`drndump` コマンドの実行結果は、Droonga用のメッセージの一覧です。"

msgid ""
"You need to use `droonga-request` command to send it to your Droogna cluster.\n"
"Install the command included in the package `droonga-client`, via rubygems:"
msgstr ""
"Droongaクラスタにそれらのメッセージを送信するには、`droonga-request` コマンドを使います。\n"
"このコマンドを含んでいるGemパッケージ `droonga-client` をインストールして下さい:"

msgid "    # gem install droonga-client"
msgstr ""

msgid ""
"After that, establish that the `droonga-request` command has been installed su"
"ccessfully:"
msgstr "`droonga-request` コマンドが正しくインストールされた事を確認しましょう:"

msgid ""
"    # droonga-request --version\n"
"    droonga-request 0.1.7"
msgstr ""

msgid "### Prepare an empty Droonga cluster"
msgstr "### 空のDroongaクラスタを用意する"

msgid ""
"Assume that there is an empty Droonga cluster constructed from two nodes `192."
"168.0.10` and `192.168.0.11`, now your are logged in to the host `192.168.0.12"
"`, and there is a dump file `dump.jsons`."
msgstr ""
"2つのノード `192.168.0.10` と `192.168.0.11` からなる空のクラスタがあり、今 `192.168.0.12` にログインして操"
"作を行っていて、ダンプファイルが `dump.jsons` という名前で手元にあると仮定します。"

msgid ""
"If you are reading this tutorial sequentially, you'll have an existing cluster"
" and the dump file.\n"
"Make it empty with these commands:"
msgstr "もし順番にこのチュートリアルを読み進めているのであれば、クラスタとダンプファイルが既に手元にあるはずです。以下の操作でクラスタを空にしましょう:"

msgid ""
"    (on 192.168.0.10)\n"
"    # kill $(cat ~/droonga/droonga-http-server.pid)\n"
"    # kill $(cat ~/droonga/droonga-engine.pid)\n"
"    # rm -r ~/droonga/000\n"
"    # host=192.168.0.10\n"
"    # droonga-engine --host=$host \\\n"
"                     --log-file=~/droonga/droonga-engine.log \\\n"
"                     --daemon \\\n"
"                     --pid-file=~/droonga/droonga-engine.pid\n"
"    # droonga-http-server --port=10041 \\\n"
"                          --receive-host-name=$host \\\n"
"                          --droonga-engine-host-name=$host \\\n"
"                          --access-log-file=~/droonga/droonga-http-server.acce"
"ss.log \\\n"
"                          --system-log-file=~/droonga/droonga-http-server.syst"
"em.log \\\n"
"                          --daemon \\\n"
"                          --pid-file=~/droonga/droonga-http-server.pid"
msgstr ""

msgid ""
"    (on 192.168.0.11)\n"
"    # kill $(cat ~/droonga/droonga-http-server.pid)\n"
"    # kill $(cat ~/droonga/droonga-engine.pid)\n"
"    # rm -r ~/droonga/000\n"
"    # host=192.168.0.11\n"
"    # droonga-engine --host=$host \\\n"
"                     --log-file=~/droonga/droonga-engine.log \\\n"
"                     --daemon \\\n"
"                     --pid-file=~/droonga/droonga-engine.pid\n"
"    # droonga-http-server --port=10041 \\\n"
"                          --receive-host-name=$host \\\n"
"                          --droonga-engine-host-name=$host \\\n"
"                          --access-log-file=~/droonga/droonga-http-server.acce"
"ss.log \\\n"
"                          --system-log-file=~/droonga/droonga-http-server.syst"
"em.log \\\n"
"                          --daemon \\\n"
"                          --pid-file=~/droonga/droonga-http-server.pid"
msgstr ""

msgid "After that the cluster becomes empty."
msgstr "これでクラスタは空になります。"

msgid "### Restore data from a dump result, to an empty Droonga cluster"
msgstr "### ダンプ結果から空のDroongaクラスタへデータを復元する"

msgid ""
"Because the result of the `drndump` command includes complete information to c"
"onstruct a dataset same to the source, you can re-construct your cluster from "
"a dump file, even if the cluster is broken.\n"
"You just have to pour the contents of the dump file to an empty cluster, by th"
"e `droonga-request` command."
msgstr ""
"`drndump` の実行結果はダンプ出力元と同じ内容のデータセットを作るために必要な情報をすべて含んでいます。そのため、クラスタが壊れた場合でも、ダンプフ"
"ァイルからクラスタを再構築する事ができます。\n"
"やり方は単純で、単にダンプファイルを `droonga-request` コマンドを使ってからのクラスタに流し込むだけです。"

msgid "To restore the cluster from the dump file, run a command line like:"
msgstr "ダンプファイルからクラスタの内容を復元するには、以下のようなコマンドを実行します:"

msgid ""
"~~~\n"
"# droonga-request --host=192.168.0.10 \\\n"
"                    --receiver-host=192.168.0.12 \\\n"
"                    dump.jsons\n"
"Elapsed time: 0.027541763\n"
"{\n"
"  \"inReplyTo\": \"1401099940.5548894\",\n"
"  \"statusCode\": 200,\n"
"  \"type\": \"table_create.result\",\n"
"  \"body\": [\n"
"    [\n"
"      0,\n"
"      1401099940.591563,\n"
"      0.00031876564025878906\n"
"    ],\n"
"    true\n"
"  ]\n"
"}\n"
"...\n"
"Elapsed time: 0.008678467\n"
"{\n"
"  \"inReplyTo\": \"1401099941.0794394\",\n"
"  \"statusCode\": 200,\n"
"  \"type\": \"column_create.result\",\n"
"  \"body\": [\n"
"    [\n"
"      0,\n"
"      1401099941.1154332,\n"
"      0.00027871131896972656\n"
"    ],\n"
"    true\n"
"  ]\n"
"}\n"
"~~~"
msgstr ""

msgid ""
" * You must specify valid host name or IP address of one of nodes in the clust"
"er, via the option `--host`.\n"
" * You must specify valid host name or IP address of the computer you are logg"
"ed in, via the option `--receiver-host`.\n"
"   It is used by the Droonga cluster, to send response messages."
msgstr ""
" * `--host` オプションには、クラスタ内のいずれかのノードの正しいホスト名またはIPアドレスを指定します。\n"
" * `--receiver-host` オプションには、今操作しているコンピュータ自身の正しいホスト名またはIPアドレスを指定します。\n"
"   この情報は、Droongaクラスタがメッセージを送り返すために使われます。"

msgid "## Duplicate an existing Droonga cluster to another empty cluster"
msgstr "## 既存のクラスタを別の空のクラスタに複製する"

msgid ""
"If you have multiple Droonga clusters, then you can duplicate one to another w"
"ith `drndump` and `droonga-request` commands."
msgstr ""
"複数のDroongaクラスタが存在する時に、`drndump` と `droonga-request` の2つのコマンドを併用すると、片方のクラスタの内容を"
"もう片方に複製する事ができます。"

msgid ""
"The command `drndump` reports its result to the standard output.\n"
"On the other hand, `droonga-request` can receive messages from the standard in"
"put.\n"
"So, you just connect them with a pipe, to duplicate contents of a cluster to a"
"nother."
msgstr ""
"`drndump` コマンドは結果を標準出力に出力します。\n"
"その一方で、`droonga-request` コマンドは標準入力からメッセージを受け取る事ができます。\n"
"ですので、これらをパイプで繋げるだけで、片方のクラスタの内容をもう片方に複製できます。"

msgid "### Prepare multiple Droonga clusters"
msgstr "### 複数のDroongaクラスタを用意する"

msgid ""
"Assume that there are two clusters: the source has a node `192.168.0.10`, the "
"destination has a node `192.168.0.11`, and now your are logged in to the host "
"`192.168.0.12`."
msgstr ""
"ノード `192.168.0.10` を含む複製元クラスタと、ノード `192.168.0.11` を含む複製先クラスタの2つのクラスタがあり、今 `192"
".168.0.12` にログインして操作を行っていると仮定します。"

msgid ""
"If you are reading this tutorial sequentially, you'll have an existing cluster"
" with two nodes.\n"
"Construct two clusters and make one empty, with these commands:"
msgstr ""
"もし順番にこのチュートリアルを読み進めているのであれば、2つのノードを含むクラスタが手元にあるはずです。以下の操作で2つのクラスタを作り、1つを空にしましょ"
"う:"

msgid ""
"    (on 192.168.0.10)\n"
"    # host=192.168.0.10\n"
"    # droonga-engine-catalog-generate --hosts=$host \\\n"
"                                      --output=~/droonga/catalog.json"
msgstr ""

msgid ""
"    (on 192.168.0.11)\n"
"    # kill $(cat ~/droonga/droonga-http-server.pid)\n"
"    # kill $(cat ~/droonga/droonga-engine.pid)\n"
"    # rm -r ~/droonga/000\n"
"    # host=192.168.0.11\n"
"    # droonga-engine-catalog-generate --hosts=$host \\\n"
"                                      --output=~/droonga/catalog.json\n"
"    # cd ~/droonga\n"
"    # droonga-engine --host=$host \\\n"
"                     --log-file=~/droonga/droonga-engine.log \\\n"
"                     --daemon \\\n"
"                     --pid-file=~/droonga/droonga-engine.pid\n"
"    # droonga-http-server --port=10041 \\\n"
"                          --receive-host-name=$host \\\n"
"                          --droonga-engine-host-name=$host \\\n"
"                          --access-log-file=~/droonga/droonga-http-server.acce"
"ss.log \\\n"
"                          --system-log-file=~/droonga/droonga-http-server.syst"
"em.log \\\n"
"                          --daemon \\\n"
"                          --pid-file=~/droonga/droonga-http-server.pid"
msgstr ""

msgid ""
"After that there are two clusters: one contains `192.168.0.10` with data, anot"
"her contains `192.168.0.11` with no data."
msgstr ""
"これで、ノード `192.168.0.10` を含む複製元クラスタと、ノード `192.168.0.11` を含む複製先の空のクラスタの、2つのクラスタがで"
"きます。"

msgid "### Duplicate data between two Droonga clusters"
msgstr "### 2つのDroongaクラスタの間でデータを複製する"

msgid ""
"To duplicate the source cluster to the destination cluster, run a command line"
" like:"
msgstr "複製元クラスタから複製先クラスタへデータを複製するには、以下のようなコマンドを実行します:"

msgid ""
"~~~\n"
"# drndump --host=192.168.0.10 \\\n"
"           --receiver-host=192.168.0.12 | \\\n"
"    droonga-request --host=192.168.0.20 \\\n"
"                    --receiver-host=192.168.0.12\n"
"Elapsed time: 0.027541763\n"
"{\n"
"  \"inReplyTo\": \"1401099940.5548894\",\n"
"  \"statusCode\": 200,\n"
"  \"type\": \"table_create.result\",\n"
"  \"body\": [\n"
"    [\n"
"      0,\n"
"      1401099940.591563,\n"
"      0.00031876564025878906\n"
"    ],\n"
"    true\n"
"  ]\n"
"}\n"
"...\n"
"Elapsed time: 0.008678467\n"
"{\n"
"  \"inReplyTo\": \"1401099941.0794394\",\n"
"  \"statusCode\": 200,\n"
"  \"type\": \"column_create.result\",\n"
"  \"body\": [\n"
"    [\n"
"      0,\n"
"      1401099941.1154332,\n"
"      0.00027871131896972656\n"
"    ],\n"
"    true\n"
"  ]\n"
"}\n"
"~~~"
msgstr ""

msgid "After that contents of these two clusters are completely synchronized."
msgstr "以上の操作で、2つのクラスタの内容が完全に同期されます。"

msgid "### Unite two Droonga clusters"
msgstr "### 2つのDroongaクラスタを結合する"

msgid "Run following command line to unite these two clusters:"
msgstr "これらの2つのクラスタを結合するために、以下のコマンド列を実行しましょう:"

msgid ""
"    (on 192.168.0.10, 192.168.0.11)\n"
"    # droonga-engine-catalog-generate --hosts=192.168.0.10,192.168.0.11 \\\n"
"                                      --output=~/droonga/catalog.json"
msgstr ""

msgid "After that there is just one cluster - yes, it's the initial state."
msgstr "これで、1つだけクラスタがある状態になりました。最初の状態に戻ったという事になります。"

msgid "## Conclusion"
msgstr "## まとめ"

msgid ""
"In this tutorial, you did backup a [Droonga][] cluster and restore the data.\n"
"Moreover, you did duplicate contents of an existing Droogna cluster to another"
" empty cluster."
msgstr ""
"このチュートリアルでは、[Droonga][]クラスタのバックアップとデータの復元の方法を実践しました。\n"
"また、既存のDroongaクラスタの内容を別の空のクラスタへ複製する方法も実践しました。"

msgid ""
"Next, let's learn [how to add a new replica to an existing Droonga cluster](.."
"/add-replica/)."
msgstr "続いて、[既存のDroongaクラスタに新しいreplicaを追加する手順](../add-replica/)を学びましょう。"

msgid ""
"  [Ubuntu]: http://www.ubuntu.com/\n"
"  [Droonga]: https://droonga.org/\n"
"  [Groonga]: http://groonga.org/\n"
"  [command reference]: ../../reference/commands/"
msgstr ""
