msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"PO-Revision-Date: 2014-03-05 12:52+0900\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

msgid ""
"---\n"
"title: \"Droonga tutorial: How to setup Droonga services without installation s"
"cript?\"\n"
"layout: en\n"
"---"
msgstr ""
"---\n"
"title: \"Droonga チュートリアル: インストールスクリプトを使わずにDroongaの構成サービスをセットアップする手順\"\n"
"layout: ja\n"
"---"

msgid ""
"* TOC\n"
"{:toc}"
msgstr ""

msgid "## The goal of this tutorial"
msgstr "## チュートリアルのゴール"

msgid "Learning steps to setup a Droonga node manually, without installation script."
msgstr "インストールスクリプトを使わずに、Droongaノードを手動でセットアップするための手順を学ぶこと。"

msgid "## Why manual install?"
msgstr "## なぜ手動インストールが必要なのか？"

msgid ""
"The installation script of `droonga-engine` and `droonga-http-server` works on"
"ly on several environments, for now:"
msgstr "`droonga-engine`と~droonga-http-server`のインストールスクリプトは、現在の所、いくつかの環境でのみ動作します:"

msgid ""
" * Debian GNU/Linux (latest release)\n"
" * Ubuntu (latest release, latest LTS)\n"
" * CentOS 7"
msgstr ""
" * Debian GNU/Linux (最新のリリース)\n"
" * Ubuntu (最新のリリース、最新のLTS)\n"
" * CentOS 7"

msgid ""
"Otherwise, you have to install services maually.\n"
"(If you have knowledge to support other platforms, please send a pull request!"
")"
msgstr ""
"それ以外の環境では、サービスを手動でインストールする必要があります。\n"
"（上記以外の環境に対応するための知識をお持ちの場合、是非プルリクエストをお送り下さい！）"

msgid ""
"This tutorial describes how to setup `droonga-engine` and `droonga-http-server"
"` without installation script."
msgstr ""
"このチュートリアルでは、`droonga-engine`と`droonga-http-server`をインストールスクリプトを使わずにセットアップする方法を"
"解説します。"

msgid "## Requirements"
msgstr "## 必要な物"

msgid ""
" * 2GB or larger size RAM.\n"
"   Because the gem package `rroonga` (required by `droonga-engine`) includes a"
" native extension, you won't be able to install it successfully if you have on"
"ly less RAM.\n"
" * Available `gem` command for the RubyGems.\n"
" * Available `npm` command for the npmjs.org."
msgstr ""
" * 2GB以上の大きさのRAM。\n"
"   Gemパッケージ`rroonga`（`droonga-engine`によって要求されます）はネイティブ拡張を含んでおり、RAMの搭載量が小さいと、これ"
"をインストールすることができません。\n"
" * RubyGemsのための`gem`コマンドが利用できる状態になっていること。\n"
" * npmjs.orgのための`npm`コマンドが利用できる状態になっていること。"

msgid "## Steps to install services"
msgstr "## サービスのインストール手順"

msgid ""
" 1. Install platform packages required to install `gem` and `npm` packages wit"
"h native extensions.\n"
"    For example, on an Ubuntu server you'll have to install these packages via"
" `apt`: `ruby`, `ruby-dev`, `build-essential`, `nodejs`, `nodejs-legacy`, and "
"`npm`.\n"
"    On a CentOS 6.x server, you can prepare required environment by these step"
"s:"
msgstr ""
" 1. ネイティブ拡張を伴う`gem`や`npm`のパッケージをインストールするために必要な、プラットフォームごとのパッケージをインストールする。\n"
"    例えば、Ubuntuサーバであれば`apt`を使って以下のパッケージをインストールします：`ruby`, `ruby-dev`, `build-es"
"sential`, `nodejs`, `nodejs-legacy`, `npm` \n"
"    CentOS 6.xサーバでは、以下の手順で必要な環境を用意できます:"

msgid ""
"        # yum -y groupinstall development\n"
"        # curl -L get.rvm.io | bash -s stable\n"
"        # source /etc/profile.d/rvm.sh\n"
"        # rvm reload\n"
"        # rvm install 2.1.2\n"
"        # yum -y install npm"
msgstr ""

msgid ""
" 2. Install a gem package `droonga-engine`.\n"
"    It is the core component provides most features of Droonga system."
msgstr ""
" 2. Gemパッケージ `droonga-engine` をインストールする。\n"
"    これはDroongaシステムの主要な機能を提供する、核となるコンポーネントです。"

msgid "        # gem install droonga-engine"
msgstr ""

msgid ""
" 3. Install an npm package `droonga-http-server`.\n"
"    It is the frontend component required to translate HTTP requests to Droong"
"a's native one."
msgstr ""
" 3. npmパッケージ `droonga-http-server` をインストールする。\n"
"    これはHTTPのリクエストをDroongaネイティブのリクエストに変換するために必要な、フロントエンドとなるコンポーネントです。"

msgid "        # npm install -g droonga-http-server"
msgstr ""

msgid ""
" 4. Prepare users for each service.\n"
"    All configuration files and physical databases are placed under their home"
" directories."
msgstr ""
" 4. 描くサービスのためのユーザを作成する。\n"
"    すべての設定ファイルと物理的なデータベースは、これらのユーザのホームディレクトリ以下に置かれます。"

msgid ""
"        # useradd -m droonga-engine\n"
"        # useradd -m droonga-http-server"
msgstr ""

msgid ""
" 5. Prepare a configuration directory `droonga` under the home directory of ea"
"ch user."
msgstr " 5. 設定の置き場所となる`droonga`ディレクトリを、各ユーザのホーム直下に作成する。"

msgid ""
"        # mkdir ~droonga-engine/droonga\n"
"        # mkdir ~droonga-http-server/droonga"
msgstr ""

msgid ""
" 6. Define an accessible host name or an IP address of the computer, for the n"
"ode name.\n"
"    [It must be resolvable from other computers.](../groonga/#accessible-host-"
"name)"
msgstr ""
" 6. そのノードの名前として、アクセス可能なホスト名またはIPアドレスを定義する。\n"
"    [この名前は、他のコンピュータから名前解決できる必要があります。](../groonga/#accessible-host-name)"

msgid "        # host=192.168.100.50"
msgstr ""

msgid ""
" 7. Create a `droonga-engine.yaml` and `catalog.json` for `droonga-engine`.\n"
"    Currently you have to specify the name of the node itself."
msgstr ""
" 7. `droonga-engine`用の設定ファイル`droonga-engine.yaml`と`catalog.json`を作成する。\n"
"    今の所、指定する必要があるのはそのノード自身の名前だけです。"

msgid ""
"        # cd ~droonga-engine/droonga\n"
"        # droonga-engine-configure --quiet --reset-config --reset-catalog \\\n"
"                                   --host=$host \\\n"
"                                   --daemon\n"
"        # chown -R droonga-engine:droonga-engine ~droonga-engine/droonga"
msgstr ""

msgid ""
" 8. Create a `droonga-http-server.yaml` for `droonga-http-server`.\n"
"    Currently you have to specify the host name of the droonga-engine node and"
" the name of the node itself.\n"
"    For example, if both services work on the computer:"
msgstr ""
" 8. `droonga-http-server`用の設定ファイル`droonga-http-server.yaml`を作成する。\n"
"    今の所、指定する必要があるのは接続先にするdroonga-engineノードの名前と、そのノード自身の名前だけです。\n"
"    例えば、両方のサービスがそのコンピュータの上で動作するのであれば以下のようにします:"

msgid ""
"        # cd ~droonga-http-server/droonga\n"
"        # droonga-http-server-configure --quiet --reset-config \\\n"
"                                        --droonga-engine-host-name=$host \\\n"
"                                        --receive-host-name=$host \\\n"
"                                        --daemon\n"
"        # chown -R droonga-http-server:droonga-http-server ~droonga-http-serve"
"r/droonga"
msgstr ""

msgid "## How to start services {#start-services}"
msgstr "## サービスの起動方法 {#start-services}"

msgid ""
"To start the `droonga-engine` service, run the `droonga-engine` command in the"
" configuration directory, like:"
msgstr "`droonga-engine`サービスを起動するには、以下のように、設定ディレクトリで`droonga-engine`コマンドを実行します:"

msgid ""
"    # cd ~droonga-engine/droonga\n"
"    # sudo -u droogna-engine -H droonga-engine"
msgstr ""

msgid ""
"To start the `droonga-http-server` service, run the `droonga-http-server` comm"
"and in the configuration directory, like:"
msgstr ""
"`droonga-http-server`サービスを起動するには、以下のように、設定ディレクトリで`droonga-http-server`コマンドを実行し"
"ます:"

msgid ""
"    # cd ~droonga-http-server/droonga\n"
"    # sudo -u droogna-http-server -H droonga-http-server"
msgstr ""

msgid "Then, PID files are automatically generated and services start as daemons."
msgstr "すると、PIDファイルが自動的に作成され、サービスがデーモンとして動作し始めます。"

msgid "## How to stop services {#stop-services}"
msgstr "## サービスの停止方法 {#stop-services}"

msgid ""
"To stop the `droonga-engine` service, run the `droonga-engine-stop` command, l"
"ike:"
msgstr "`droonga-engine`サービスを停止するには、以下のように`droonga-engine-stop`コマンドを実行します:"

msgid ""
"    # cd ~droonga-engine/droonga\n"
"    # sudo -u droogna-engine -H droonga-engine-stop"
msgstr ""

msgid ""
"To start the `droonga-http-server-stop` service, run the `droonga-http-server`"
" command, like:"
msgstr "`droonga-http-server`サービスを停止するには、以下のように`droonga-http-server-stop`コマンドを実行します:"

msgid ""
"    # cd ~droonga-http-server/droonga\n"
"    # sudo -u droogna-http-server -H droonga-http-server-stop"
msgstr ""

msgid ""
"These commands automatically detect the location of PID files and stop daemon "
"processes."
msgstr "これらのコマンドはPIDファイルの位置を自動的に検出し、デーモンのプロセスを停止します。"
