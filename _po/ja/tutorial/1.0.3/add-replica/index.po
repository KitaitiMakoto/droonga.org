msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"PO-Revision-Date: 2014-03-05 12:52+0900\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

msgid ""
"---\n"
"title: \"Droonga tutorial: How to add a new replica to an existing cluster?\"\n"
"layout: en\n"
"---"
msgstr ""
"---\n"
"title: \"Droonga tutorial: 既存クラスタへのreplicaの追加\"\n"
"layout: ja\n"
"---"

msgid ""
"* TOC\n"
"{:toc}"
msgstr ""

msgid "## The goal of this tutorial"
msgstr "## チュートリアルのゴール"

msgid ""
"Learning steps to add a new replica node, remove an existing replica, and repl"
"ace a replica with new one, for your existing [Droonga][] cluster."
msgstr ""

msgid "## Precondition"
msgstr "## 前提条件"

msgid ""
"* You must have an existing Droonga cluster with some data.\n"
"  Please complete the [\"getting started\" tutorial](../groonga/) before this.\n"
"* You must know how to duplicate data between multiple clusters.\n"
"  Please complete the [\"How to backup and restore the database?\" tutorial](../"
"dump-restore/) before this."
msgstr ""

msgid "## What's \"replica\"?"
msgstr ""

msgid "There are two axes, \"replica\" and \"slice\", for Droonga nodes."
msgstr ""

msgid ""
"All \"replica\" nodes have completely equal data, so they can process your reque"
"sts (ex. \"search\") parallelly.\n"
"You can increase the capacity of your cluster to process increasing requests, "
"by adding new replicas."
msgstr ""

msgid ""
"On the other hand, \"slice\" nodes have different data, for example, one node co"
"ntains data of the year 2013, another has data of 2014.\n"
"You can increase the capacity of your cluster to store increasing data, by add"
"ing new slices."
msgstr ""

msgid ""
"Currently, for a Droonga cluster which is configured as a Groonga compatible s"
"ystem, only replicas can be added, but slices cannot be done.\n"
"We'll improve extensibility for slices in the future."
msgstr ""

msgid ""
"Anyway, this tutorial explains how to add a new replica node to an existing Dr"
"oogna cluster.\n"
"Here we go!"
msgstr ""

msgid "## Add a new replica node to an existing cluster"
msgstr ""

msgid ""
"In this case you don't have to stop the cluster working, for any read-only req"
"uests like \"search\".\n"
"You can add a new replica, in the backstage, without downing your service."
msgstr ""

msgid ""
"On the other hand, you have to stop inpouring of new data to the cluster until"
" the new node starts working.\n"
"(In the future we'll provide mechanism to add new nodes completely silently wi"
"thout any stopping of data-flow, but currently can't.)"
msgstr ""

msgid ""
"Assume that there is a Droonga cluster constructed with two replica nodes `192"
".168.0.10` and `192.168.0.11`, and we are going to add a new replica node `192"
".168.0.12`."
msgstr ""

msgid "### Setup a new node"
msgstr ""

msgid "First, prepare a new computer, install required softwares and configure them."
msgstr ""

msgid ""
"    (on 192.168.0.12)\n"
"    # apt-get update\n"
"    # apt-get -y upgrade\n"
"    # apt-get install -y ruby ruby-dev build-essential nodejs npm\n"
"    # gem install droonga-engine\n"
"    # npm install -g droonga-http-server\n"
"    # mkdir ~/droonga"
msgstr ""

msgid ""
"Then, remember the command line you executed to generate `catalog.json` for yo"
"ur cluster.\n"
"It was:"
msgstr ""

msgid ""
"    (on 192.168.0.10 or 192.168.0.11)\n"
"    # droonga-engine-catalog-generate --hosts=192.168.0.10,192.168.0.11 \\\n"
"                                      --output=~/droonga/catalog.json"
msgstr ""

msgid ""
"For the new node, you have to generate a `custom.json` includes only one node,"
" with same options except the `--host` option, like:"
msgstr ""

msgid ""
"    (on 192.168.0.12)\n"
"    # droonga-engine-catalog-generate --hosts=192.168.0.12 \\\n"
"                                      --output=~/droonga/catalog.json"
msgstr ""

msgid "Let's start the server."
msgstr ""

msgid ""
"    (on 192.168.0.12)\n"
"    # host=192.168.0.12\n"
"    # droonga-engine --host=$host \\\n"
"                     --daemon \\\n"
"                     --pid-file=~/droonga/droonga-engine.pid\n"
"    # droonga-http-server --port=10041 \\\n"
"                          --receive-host-name=$host \\\n"
"                          --droonga-engine-host-name=$host \\\n"
"                          --daemon \\\n"
"                          --pid-file=~/droonga/droonga-http-server.pid"
msgstr ""

msgid "Then there are two separate Droonga clusters on this time."
msgstr ""

msgid ""
" * The existing cluster including two replicas.\n"
"   Let's give a name *\"alpha\"* to it, for now.\n"
"   * `192.168.0.10`\n"
"   * `192.168.0.11`\n"
" * The new cluster including just one replica.\n"
"   Let's give a name *\"beta\"* to it, for now.\n"
"   * `192.168.0.12`"
msgstr ""

msgid "### Suspend inpouring of \"write\" requests"
msgstr ""

msgid ""
"Before starting  duplication of data, you must suspend inpouring of \"write\" re"
"quests to the cluster alpha, because we have to synchronize data in clusters a"
"lpha and beta completely.\n"
"Otherwise, the new added replica node will contain incomplete data.\n"
"Because data in replicas will be inconsistent, results for any request to the "
"cluster become unstable."
msgstr ""

msgid ""
"What's \"write\" request?\n"
"In particular, these commands modify data in the cluster:"
msgstr ""

msgid ""
" * `add`\n"
" * `column_create`\n"
" * `column_remove`\n"
" * `delete`\n"
" * `load`\n"
" * `table_create`\n"
" * `table_remove`"
msgstr ""

msgid ""
"If you load new data via the `load` command triggered by a batch script starte"
"d as a cronjob, disable the job.\n"
"If a crawler agent adds new data via the `add` command, stop it.\n"
"If you put a fluentd as a buffer between crawler or loader and the cluster, st"
"op outgoing messages from the buffer."
msgstr ""

msgid "### Duplicate data from the existing cluster to the new replica"
msgstr ""

msgid ""
"Duplicate data from the cluster alpha to the cluster beta.\n"
"It can be done by `drndump` and `droonga-request` commands.\n"
"(You have to install `drndump` and `droonga-client` gem packages.)"
msgstr ""

msgid ""
"    (on 192.168.0.12)\n"
"    # drndump --host=192.168.0.10 \\\n"
"              --receiver-host=192.168.0.12 | \\\n"
"        droonga-request --host=192.168.0.12 \\\n"
"                        --receiver-host=192.168.0.12"
msgstr ""

msgid ""
"Note that you must specify the host name or the IP address of the machine via "
"the `--receiver-host` option.\n"
"If you run the command line on the node `192.168.0.11`, then:"
msgstr ""

msgid ""
"    (on 192.168.0.11)\n"
"    # drndump --host=192.168.0.10 \\\n"
"              --receiver-host=192.168.0.11 | \\\n"
"        droonga-request --host=192.168.0.12 \\\n"
"                        --receiver-host=192.168.0.11"
msgstr ""

msgid "### Join the new replica to the cluster"
msgstr ""

msgid ""
"After the duplication is successfully done, join the new replica to the existi"
"ng clster.\n"
"Re-generate the `catalog.json` on the newly joining node `192.168.0.12`, with "
"all nodes specified via the `--hosts` option, like:"
msgstr ""

msgid ""
"    (on 192.168.0.12)\n"
"    # droonga-engine-catalog-generate --hosts=192.168.0.10,192.168.0.11,192.16"
"8.0.12 \\\n"
"                                      --output=~/droonga/catalog.json"
msgstr ""

msgid ""
"The server process detects new `catalog.json` and restats itself automatically"
"."
msgstr ""

msgid "Then there are two overlapping Droonga clusters theoretically on this time."
msgstr ""

msgid ""
" * The existing cluster \"alpha\", including two replicas.\n"
"   * `192.168.0.10`\n"
"   * `192.168.0.11`\n"
" * The new cluster including three replicas.\n"
"   Let's give a name *\"charlie\"* to it, for now.\n"
"   * `192.168.0.10`\n"
"   * `192.168.0.11`\n"
"   * `192.168.0.12`"
msgstr ""

msgid ""
"Note that the temporary cluster named \"beta\" is gone.\n"
"And, the new node `192.168.0.12` knows the cluster charlie includes three node"
"s, other two existing nodes don't know that.\n"
"Because both two existing nodes think that there are only them in the cluster "
"they belong to, any incoming request to them never delivered to the new replic"
"a `192.168.0.12` yet."
msgstr ""

msgid "Next, copy new `catalog.json` from `192.168.0.12` to others."
msgstr ""

msgid ""
"    (on 192.168.0.12)\n"
"    # scp ~/droonga/catalog.json 192.168.0.10:~/droonga/\n"
"    # scp ~/droonga/catalog.json 192.168.0.11:~/droonga/"
msgstr ""

msgid "Servers detect new `catalog.json` and restart themselves automatically."
msgstr ""

msgid "Then there are just one Droonga clusters on this time."
msgstr ""

msgid ""
" * The new cluster \"charlie\",including three replicas.\n"
"   * `192.168.0.10`\n"
"   * `192.168.0.11`\n"
"   * `192.168.0.12`"
msgstr ""

msgid ""
"Note that the old cluster named \"alpha\" is gone.\n"
"Now the new cluster \"charlie\" with three replicas works perfectly, instead of "
"the old one with two replicas."
msgstr ""

msgid "### Resume inpouring of \"write\" requests"
msgstr ""

msgid ""
"OK, it's the time.\n"
"Because all replica nodes are completely synchronized, the cluster now can pro"
"cess any request stably.\n"
"Resume inpouring of requests which can modify the data in the cluster - cronjo"
"bs, crawlers, buffers, and so on."
msgstr ""

msgid "With that, a new replica node has joined to your Droonga cluster successfully."
msgstr ""

msgid "## Remove an existing replica node from an existing cluster"
msgstr ""

msgid ""
"A Droonga node can die by various fatal reasons - for example, OOM killer, dis"
"k-full error, troubles around its hardware, etc.\n"
"Because nodes in a Droonga cluster observe each other and they stop delivering"
" messages to dead nodes automatically, the cluster keeps working even if there"
" are some dead nodes.\n"
"Then you have to remove dead nodes from the cluster."
msgstr ""

msgid ""
"Of course, even if a node is still working, you may plan to remove it to reuse"
" for another purpose."
msgstr ""

msgid ""
"Assume that there is a Droonga cluster constructed with trhee replica nodes `1"
"92.168.0.10`, `192.168.0.11` and `192.168.0.12`, and planning to remove the la"
"st node `192.168.0.12` from the cluster."
msgstr ""

msgid "### Unjoin an existing replica from the cluster"
msgstr ""

msgid ""
"To remove a replica from an existing cluster, you just have to update the \"cat"
"alog.json\" with new list of replica nodes except the node to be removed:"
msgstr ""

msgid ""
"    (on 192.168.0.10)\n"
"    # droonga-engine-catalog-generate --hosts=192.168.0.10,192.168.0.11 \\\n"
"                                      --output=~/droonga/catalog.json"
msgstr ""

msgid ""
" * The existing cluster \"charlie\" including three replicas.\n"
"   * `192.168.0.10`\n"
"   * `192.168.0.11`\n"
"   * `192.168.0.12`\n"
" * The new cluster including two replicas.\n"
"   Let's give a name *\"delta\"* to it, for now.\n"
"   * `192.168.0.10`\n"
"   * `192.168.0.11`"
msgstr ""

msgid ""
"The node `192.168.0.10` with new `catalog.json` knows the cluster delta includ"
"es only two nodes, so it doesn't deliver incoming messages to the missing node"
" `192.168.0.12` anymore."
msgstr ""

msgid "Next, copy new `catalog.json` from `192.168.0.10` to others."
msgstr ""

msgid ""
"    (on 192.168.0.10)\n"
"    # scp ~/droonga/catalog.json 192.168.0.11:~/droonga/\n"
"    # scp ~/droonga/catalog.json 192.168.0.12:~/droonga/"
msgstr ""

msgid "Then there is only one Droonga cluster on this time."
msgstr ""

msgid ""
" * The new cluster \"delta\" including two replicas.\n"
"   * `192.168.0.10`\n"
"   * `192.168.0.11`"
msgstr ""

msgid ""
"Even if both nodes `192.168.0.11` and `192.168.0.12` receive requests, they ar"
"e delivered to the nodes of the cluster delta.\n"
"The orphan node `192.168.0.12` never process requests by self."
msgstr ""

msgid ""
"OK, the node is ready to be removed.\n"
"Stop servers and shutdown it if needed."
msgstr ""

msgid ""
"    (on 192.168.0.12)\n"
"    # kill $(cat ~/droonga/droonga-engine.pid)\n"
"    # kill $(cat ~/droonga/droonga-http-server.pid)"
msgstr ""

msgid "## Replace an existing replica node in a cluster with a new one"
msgstr ""

msgid "Replacing of nodes is a combination of those instructions above."
msgstr ""

msgid ""
"Assume that there is a Droonga cluster constructed with two replica nodes `192"
".168.0.10` and `192.168.0.11`, the node `192.168.0.11` is unstable, and planni"
"ng to replace it with a new node `192.168.0.12`."
msgstr ""

msgid ""
"First, remove the unstable node.\n"
"Re-generate `catalog.json` without the node to be removed, and spread it to ot"
"her nodes in the cluster:"
msgstr ""

msgid ""
"    (on 192.168.0.10)\n"
"    # droonga-engine-catalog-generate --hosts=192.168.0.10 \\\n"
"                                      --output=~/droonga/catalog.json\n"
"    # scp ~/droonga/catalog.json 192.168.0.11:~/droonga/"
msgstr ""

msgid "After that the node `192.168.0.11` unjoins from the cluster successfully."
msgstr ""

msgid "### Add a new replica"
msgstr ""

msgid ""
"Next, setup the new replica.\n"
"Construct a temporary cluster with only one node, and duplicate data from the "
"existing cluster:"
msgstr ""

msgid ""
"    (on 192.168.0.12)\n"
"    # droonga-engine-catalog-generate --hosts=192.168.0.12 \\\n"
"                                      --output=~/droonga/catalog.json\n"
"    # drndump --host=192.168.0.10 \\\n"
"              --receiver-host=192.168.0.12 | \\\n"
"        droonga-request --host=192.168.0.12 \\\n"
"                        --receiver-host=192.168.0.12"
msgstr ""

msgid ""
"After the duplication successfully finished, the node is ready to join the clu"
"ster.\n"
"Re-generate `catalog.json` and spread it to all nodes in the cluster:"
msgstr ""

msgid ""
"    (on 192.168.0.12)\n"
"    # droonga-engine-catalog-generate --hosts=192.168.0.10,192.168.0.12 \\\n"
"                                      --output=~/droonga/catalog.json\n"
"    # scp ~/droonga/catalog.json 192.168.0.10:~/droonga/"
msgstr ""

msgid ""
"Finally a Droonga cluster constructed with two nodes `192.168.0.10` and `192.1"
"68.0.12` is here."
msgstr ""

msgid "## Conclusion"
msgstr "## まとめ"

msgid ""
"In this tutorial, you did add a new replica node to an existing [Droonga][] cl"
"uster.\n"
"Moreover, you did remove an existing replica, and did replace a replica with a"
" new one."
msgstr ""

msgid ""
"  [Ubuntu]: http://www.ubuntu.com/\n"
"  [Droonga]: https://droonga.org/\n"
"  [Groonga]: http://groonga.org/\n"
"  [command reference]: ../../reference/commands/"
msgstr ""
