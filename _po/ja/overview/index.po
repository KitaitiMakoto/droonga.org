msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2011-11-20 22:17+0900\n"
"PO-Revision-Date: 2013-12-25 18:27+0900\n"
"Last-Translator: Kouhei Sutou <kou@clear-code.com>\n"
"Language-Team: Japanese\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

msgid ""
"---\n"
"title: Overview\n"
"layout: en\n"
"---"
msgstr ""
"---\n"
"title: 概要\n"
"layout: ja\n"
"---"

msgid "Not yet available in English. See [Japanese version](/ja/overview/) for now."
msgstr ""

msgid ""
"* TOC\n"
"{:toc}"
msgstr ""

msgid "## What is Droonga?"
msgstr "## Droongaとは何か"

msgid ""
"Droonga is a distributed data processing engine. Droonga has features as descr"
"ibed as follows:"
msgstr "Droongaは分散型のデータ処理エンジンです。以下の機能を持っています。"

msgid "### Column-oriented data store"
msgstr "### カラム指向データストア"

msgid "データをカラムの集合として永続的に管理するデータストアとして機能します。"
msgstr ""

msgid "### Fulltext search engine"
msgstr "### 全文検索"

msgid "転置索引方式による本格的な全文検索機能を持っています。またカラムの値によって絞り込みや集計を行うクエリや、緯度経度の位置情報による検索なども可能です。"
msgstr ""

msgid "### Replication and partitioning"
msgstr "### レプリケーション＆パーティショニング"

msgid ""
"Droongaでは複数のサーバが一つのクラスタを構成し、全体として巨大なデータ集合を管理します。\n"
"複数のサーバでデータの複製を保存したり、巨大なデータ集合を複数の部分に分割して管理することができます。"
msgstr ""

msgid "### Multitenancy"
msgstr "### マルチテナンシー"

msgid "一つのクラスタでは複数の独立なデータ集合を管理することができます。"
msgstr ""

msgid "## Design principle"
msgstr "## 設計方針"

msgid "Droongaは以下のような方針に基づいて設計されています。"
msgstr ""

msgid "### Stream-oriented"
msgstr "### ストリーム指向"

msgid ""
"Droonga Engine内では、全ての通信は一方向に流れるデータストリームとなります。検索・更新・集計などの処理の多くは、ストリームを入出力とする機能ブ"
"ロックがパイプラインを構成することで実現されます。\n"
"この構成によって、より高いスループット性能、より低いレイテンシ性能を追究することが可能となっています。"
msgstr ""

msgid "### Realtime-oriented"
msgstr "### リアルタイム指向"

msgid ""
"ここでいう「リアルタイム」とは、ある情報が発生してから、それを必要とするユーザに対して、いかに短い遅延時間で届けることができるか、という性質を指します。\n"
"リアルタイム性能は様々な要素が複合的に絡み合って実現されますが、Droongaではこれに寄与する二つの要素を採り入れています。"
msgstr ""

msgid ""
"* 転置索引の即時更新性能に優れる全文検索ライブラリGroongaを採用しています。\n"
"* 前述のストリーム指向の構成を採っています。"
msgstr ""

msgid "### High availability"
msgstr "### 高可用性"

msgid ""
"すべてのDroonga Engineプロセスに同等の機能を持たせることによって、障害発生時にプロセス単位での可用性を維持できるようにしています。複数のサーバ"
"にレプリケーションを持たせることによってデータの永続性を高めています。レプリケーション間の整合性が一時的に損なわれることは許容するものとし、結果整合性の実現"
"を目指します。"
msgstr ""

msgid "### Extensibility"
msgstr "### 拡張性"

msgid "Rubyスクリプトとして記述するプラグインによって自由に機能を拡張することができます。"
msgstr ""

msgid "## Software structure"
msgstr "## ソフトウェア構成"

msgid "Droongaは大きく二つのコンポーネントで構成されます。"
msgstr ""

msgid "### Droonga Engine"
msgstr ""

msgid ""
"分散データ処理の要となるコンポーネントです。実際にデータを管理・処理します。\n"
"Droonga Engineは、Fluentdのplugin(fluent-plugin-droonga)として実装されています。\n"
"Droonga Engineへの入出力インタフェースにはFluentdで使用できるあらゆるpluginがそのまま適用できます。\n"
"Droonga Engineのクラスタ内部の通信にはMessagePack data stream(Fluent protocol)が使用されます。"
msgstr ""

msgid "### Protocol Adapter"
msgstr ""

msgid ""
"Protocol Adapterは、WebアプリケーションからDroongaを利用しやすくするために、DroongaにHTTPおよびSocket.IOインタ"
"フェースを追加するコンポーネントです。\n"
"Protocol Adapterは、Node.js用のWebプラットフォームExpressのplugin(express-droonga)として実装されてい"
"ます。\n"
"Protocol Adapterを使用することにより、検索クエリをHTTPリクエストとして送信し、検索結果をそのレスポンスとして受け取るC/S型のサービスが"
"利用できるようになります。また、Socket.IOの特質を生かしたpub/sub型のサービスも利用することができます。"
msgstr ""

msgid "![droonga01](../../overview/droonga01.png)"
msgstr ""

msgid "## Structure of Droonga cluster"
msgstr "## Droongaクラスタの構成"

msgid ""
"Droongaクラスタは一つ以上のDroonga Engineプロセスで構成されます。\n"
"複数のDroonga Engineプロセスが一つのクラスタを構成する時、\n"
"クラスタ上の全ての資源を記述するカタログ情報を共有する必要があります。\n"
"カタログで管理するのは以下の資源です。"
msgstr ""

msgid "### Effective date"
msgstr "### 発効日時"

msgid "そのカタログの情報が有効となることが期待される日時を示します。"
msgstr ""

msgid "### Zone"
msgstr "### ゾーン"

msgid "クラスタ内に存在する全てのDroonga Engineプロセスと、それらの近接関係を示します。"
msgstr ""

msgid "### Farm"
msgstr "### ファーム"

msgid "一つのDroonga Engineプロセスで管理することのできるパーティションの量を示します。"
msgstr ""

msgid "### Dataset"
msgstr "### データセット"

msgid ""
"データ集合は、整合性をもって管理することが期待されるテーブルの組です。\n"
"一つのDroongaクラスタの中には複数のデータ集合を格納することができます。\n"
"それぞれのデータ集合は、クラスタの中で一意な名前を持たなければなりません。\n"
"一つのデータ集合は、複数の部分(パーティション)に分割されます。また、それぞれのパーティションの複製(レプリカ)が作られます。いずれもクラスタの中に分散して"
"格納されます。\n"
"個々のレコードの値から求められるハッシュ値、およびその更新された日時が、パーティション化のキーとなります。\n"
"レコードの値からハッシュ値を計算する関数は、そのレコードが属するテーブル毎に定義します。\n"
"ひとつのデータ集合を構成する一連のパーティションをリングと呼びます。"
msgstr ""

msgid "## How Droonga Engine works"
msgstr "## Droonga Engineの処理"

msgid "クラスタを構成する個々のDroonga Engineでの処理について説明します。"
msgstr ""

msgid "![droonga02](../../overview/droonga02.png)"
msgstr ""

msgid "Droonga Engineは、Fluentdのoutput pluginとして動作します。"
msgstr ""

msgid "任意のinput plugin経由で受信するデータストリームをDroongaに対する入力として扱うことができます。"
msgstr ""

msgid ""
"Droonga Engineが受信したデータは、tag名などに応じて、Adapterと呼ばれるモジュールに渡されます。Adapterは、個々のJSONデータ"
"を、Droongaの内部処理モジュールが受理できる形式に変換します。"
msgstr ""

msgid ""
"また、Droonga Engineとの通信を行うための特別な形式を満たすJSONデータを特にEnvelopeと呼んでいます。Envelope形式に適合するJ"
"SONデータは、Droonga Engineに対する処理要求やその処理結果などをより直接的に表現しています。"
msgstr ""

msgid ""
"Adapterを経て加工されたJSONデータは、Dispatcherと呼ばれるモジュールに渡されます。Dispatcherは、JSONデータをクラスタ内のど"
"のEngineプロセスに転送し、その結果をさらにまたどのEngineプロセスで処理するかといった計画を立て、その実行計画情報をJSONデータに付け加えます。"
msgstr ""

msgid "Dispatcherの出力は、Plannerというモジュールに引き渡され、クラスタ内のEngineプロセスに配送されます。"
msgstr ""

msgid ""
"JSONデータは、データ集合のパーティションを管理するHandlerというモジュールに届けられ、ここでデータストアに対する処理を加えます。必要に応じて処理結"
"果をデータとして出力したり、他のJSONデータをemitしたりします。"
msgstr ""

msgid "複数のパーティションで実行された結果を集約する場合には、Collectorというモジュールにデータが集められ、ここで集計や並べ替えなどの処理にかけられます。"
msgstr ""

msgid ""
"最終的な処理結果をDroonga Engineの外部に出力する際には、再度Adapterモジュールを通過し、出力を受け取る外部プログラムが処理しやすい形式に"
"データを整形します。"
msgstr ""

msgid ""
"上記のモジュールのうち、Adapter, Planner, Handler, Collectorについては、Rubyスクリプトで記述するpluginによって"
"、自由に処理をカスタマイズすることができます。"
msgstr ""
